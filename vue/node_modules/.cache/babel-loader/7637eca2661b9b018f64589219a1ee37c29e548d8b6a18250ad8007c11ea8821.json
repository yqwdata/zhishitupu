{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: 'PersonView',\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {},\n      rules: {\n        nickname: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }],\n        age: [{\n          required: true,\n          message: '请输入年龄',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\d+$/,\n          message: '年龄必须为数字',\n          trigger: 'blur'\n        }],\n        sex: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'change'\n        }],\n        address: [{\n          required: true,\n          message: '请输入地址',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请确认密码',\n          trigger: 'blur'\n        }, {\n          validator: validatePassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    let str = sessionStorage.getItem('user') || \"{}\";\n    this.form = JSON.parse(str);\n  },\n  methods: {\n    update() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          request.put(\"/user\", this.form).then(res => {\n            if (res.code === '0') {\n              this.$message({\n                type: 'success',\n                message: '更新成功'\n              });\n            } else {\n              this.$message({\n                type: 'error',\n                message: res.msg\n              });\n            }\n          });\n        } else {\n          this.$message({\n            type: 'error',\n            message: '请检查输入是否正确'\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","validatePassword","rule","value","callback","form","password","Error","rules","nickname","required","message","trigger","age","pattern","sex","address","confirmPassword","validator","created","str","sessionStorage","getItem","JSON","parse","methods","update","$refs","validate","valid","put","then","res","code","$message","type","msg"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\PersonView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card style=\"width: 40%; margin: 10px\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"form.username\" disabled/>\n        </el-form-item>\n        <el-form-item label=\"昵称\" prop=\"nickname\">\n          <el-input v-model=\"form.nickname\"/>\n        </el-form-item>\n        <el-form-item label=\"年龄\" prop=\"age\">\n          <el-input v-model=\"form.age\"/>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"sex\">\n          <el-radio-group v-model=\"form.sex\">\n            <el-radio value=\"男\">男</el-radio>\n            <el-radio value=\"女\">女</el-radio>\n            <el-radio value=\"未知\">未知</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"地址\" prop=\"address\">\n          <el-input v-model=\"form.address\"/>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" show-password/>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input v-model=\"form.confirmPassword\" show-password/>\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align: center\">\n        <el-button type=\"primary\" @click=\"update\">保 存</el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: 'PersonView',\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {},\n      rules: {\n        nickname: [\n          { required: true, message: '请输入昵称', trigger: 'blur' }\n        ],\n        age: [\n          { required: true, message: '请输入年龄', trigger: 'blur' },\n          { pattern: /^\\d+$/, message: '年龄必须为数字', trigger: 'blur' }\n        ],\n        sex: [\n          { required: true, message: '请选择性别', trigger: 'change' }\n        ],\n        address: [\n          { required: true, message: '请输入地址', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请确认密码', trigger: 'blur' },\n          { validator: validatePassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    let str = sessionStorage.getItem('user') || \"{}\"\n    this.form = JSON.parse(str)\n  },\n  methods: {\n    update() {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          request.put(\"/user\", this.form).then(res => {\n            if (res.code === '0') {\n              this.$message({\n                type: 'success',\n                message: '更新成功'\n              })\n            } else {\n              this.$message({\n                type: 'error',\n                message: res.msg\n              })\n            }\n          })\n        } else {\n          this.$message({\n            type: 'error',\n            message: '请检查输入是否正确'\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"AAsCA,OAAOA,OAAM,MAAO,iBAAiB;AAErC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,MAAMC,gBAAe,GAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAClD,IAAID,KAAI,KAAM,IAAI,CAACE,IAAI,CAACC,QAAQ,EAAE;QAChCF,QAAQ,CAAC,IAAIG,KAAK,CAAC,YAAY,CAAC,CAAC;MACnC,OAAO;QACLH,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC;IACD,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MACRG,KAAK,EAAE;QACLC,QAAQ,EAAE,CACR;UAAEC,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,EACrD;QACDC,GAAG,EAAE,CACH;UAAEH,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,CAAC,EACrD;UAAEE,OAAO,EAAE,OAAO;UAAEH,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAO,EACzD;QACDG,GAAG,EAAE,CACH;UAAEL,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAS,EACvD;QACDI,OAAO,EAAE,CACP;UAAEN,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,EACrD;QACDN,QAAQ,EAAE,CACR;UAAEI,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,EACrD;QACDK,eAAe,EAAE,CACf;UAAEP,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAO,CAAC,EACrD;UAAEM,SAAS,EAAEjB,gBAAgB;UAAEW,OAAO,EAAE;QAAO;MAEnD;IACF;EACF,CAAC;EACDO,OAAOA,CAAA,EAAG;IACR,IAAIC,GAAE,GAAIC,cAAc,CAACC,OAAO,CAAC,MAAM,KAAK,IAAG;IAC/C,IAAI,CAACjB,IAAG,GAAIkB,IAAI,CAACC,KAAK,CAACJ,GAAG;EAC5B,CAAC;EACDK,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,KAAK,CAACtB,IAAI,CAACuB,QAAQ,CAAEC,KAAK,IAAK;QAClC,IAAIA,KAAK,EAAE;UACT/B,OAAO,CAACgC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACzB,IAAI,CAAC,CAAC0B,IAAI,CAACC,GAAE,IAAK;YAC1C,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;cACpB,IAAI,CAACC,QAAQ,CAAC;gBACZC,IAAI,EAAE,SAAS;gBACfxB,OAAO,EAAE;cACX,CAAC;YACH,OAAO;cACL,IAAI,CAACuB,QAAQ,CAAC;gBACZC,IAAI,EAAE,OAAO;gBACbxB,OAAO,EAAEqB,GAAG,CAACI;cACf,CAAC;YACH;UACF,CAAC;QACH,OAAO;UACL,IAAI,CAACF,QAAQ,CAAC;YACZC,IAAI,EAAE,OAAO;YACbxB,OAAO,EAAE;UACX,CAAC;QACH;MACF,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}