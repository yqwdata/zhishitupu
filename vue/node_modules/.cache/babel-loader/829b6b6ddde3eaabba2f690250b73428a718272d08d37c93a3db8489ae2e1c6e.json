{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '',\n      showError: false\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task.completed).length;\n    }\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim()) {\n        this.tasks.push({\n          id: Date.now(),\n          name: this.newTask,\n          completed: false,\n          isEditing: false\n        });\n        this.newTask = '';\n        this.showError = false;\n      } else {\n        this.showError = true;\n      }\n    },\n    toggleEditState(index, isEditing) {\n      this.tasks[index].isEditing = isEditing;\n      if (isEditing) {\n        this.previousTaskName = this.tasks[index].name;\n      }\n    },\n    editTask(index) {\n      this.toggleEditState(index, true);\n    },\n    saveTask(index) {\n      this.toggleEditState(index, false);\n    },\n    cancelEdit(index) {\n      this.tasks[index].name = this.previousTaskName;\n      this.toggleEditState(index, false);\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["data","newTask","tasks","editIndex","previousTaskName","showError","computed","completedTasksCount","filter","task","completed","length","methods","addTask","trim","push","id","Date","now","name","isEditing","toggleEditState","index","editTask","saveTask","cancelEdit","deleteTask","splice"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\ListView.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>待办事项</h1>\n    <input\n        v-model=\"newTask\"\n        placeholder=\"需要做什么？\"\n        class=\"input-field\"\n        maxlength=\"50\"\n    />\n    <button @click=\"addTask\" class=\"add-button\">添加</button>\n    <p v-if=\"showError\" class=\"error-message\">任务不能为空！</p>\n\n    <h2>已完成 {{ completedTasksCount }} 项，共 {{ tasks.length }} 项</h2>\n\n    <div v-for=\"(task, index) in tasks\" :key=\"task.id\" class=\"task\">\n      <div class=\"task-row\">\n        <label class=\"custom-checkbox\">\n          <input type=\"checkbox\" v-model=\"task.completed\" class=\"checkbox\" />\n          <span class=\"checkbox\" aria-hidden=\"true\"></span>\n        </label>\n        <span class=\"task-name\" v-if=\"!task.isEditing\">{{ task.name }}</span>\n        <input\n            v-if=\"task.isEditing\"\n            v-model=\"task.name\"\n            class=\"edit-input\"\n        />\n      </div>\n\n      <div class=\"button-group\">\n        <button\n            v-if=\"!task.isEditing\"\n            @click=\"editTask(index)\"\n            class=\"action-button\"\n        >\n          编辑\n        </button>\n        <button\n            v-if=\"!task.isEditing\"\n            @click=\"deleteTask(index)\"\n            class=\"delete action-button\"\n        >\n          删除\n        </button>\n        <button\n            v-if=\"task.isEditing\"\n            @click=\"saveTask(index)\"\n            class=\"action-button\"\n        >\n          保存\n        </button>\n        <button\n            v-if=\"task.isEditing\"\n            @click=\"cancelEdit(index)\"\n            class=\"delete action-button\"\n        >\n          取消\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '',\n      showError: false,\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task.completed).length;\n    },\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim()) {\n        this.tasks.push({ id: Date.now(), name: this.newTask, completed: false, isEditing: false });\n        this.newTask = '';\n        this.showError = false;\n      } else {\n        this.showError = true;\n      }\n    },\n    toggleEditState(index, isEditing) {\n      this.tasks[index].isEditing = isEditing;\n      if (isEditing) {\n        this.previousTaskName = this.tasks[index].name;\n      }\n    },\n    editTask(index) {\n      this.toggleEditState(index, true);\n    },\n    saveTask(index) {\n      this.toggleEditState(index, false);\n    },\n    cancelEdit(index) {\n      this.tasks[index].name = this.previousTaskName;\n      this.toggleEditState(index, false);\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  text-align: center;\n  overflow: hidden;\n}\n\n.error-message {\n  color: red;\n  margin: 5px 0;\n}\n\n.input-field {\n  display: block;\n  width: calc(100% - 20px);\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.add-button {\n  background-color: #000000;\n  color: white;\n  border: none;\n  width: 200px;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.add-button:hover {\n  background-color: #333333;\n}\n\n.task {\n  margin: 10px 0;\n}\n\n.task-row {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 0;\n}\n\n.custom-checkbox {\n  position: relative;\n  display: inline-block;\n  width: 24px; /* 自定义复选框的宽度 */\n  height: 24px; /* 自定义复选框的高度 */\n  margin-right: 10px;\n}\n\n.custom-checkbox input[type=\"checkbox\"] {\n  opacity: 0;\n  position: absolute;\n  cursor: pointer;\n}\n\n.custom-checkbox span {\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  background-color: #d30d0d;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n\n.custom-checkbox input[type=\"checkbox\"]:checked + .checkbox {\n  background-color: #acacac;\n}\n\n.custom-checkbox input[type=\"checkbox\"]:checked + .checkbox::after {\n  content: '';\n  position: absolute;\n  left: 8px;\n  top: 4px;\n  width: 4px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n\n.task-name {\n  flex: 1;\n  text-align: left;\n}\n\n.edit-input {\n  flex: 1;\n  margin: 5px auto; /* 输入框与按钮之间的间距 */\n  padding: 5px;\n}\n\n.button-group {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.action-button {\n  background-color: #000000;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 0px;\n  width: 100px;\n  transition: background-color 0.3s;\n}\n\n.action-button:hover {\n  background-color: #333333;\n}\n\n.delete {\n  background-color: rgb(232, 83, 83);\n  margin-left: 20px;\n}\n\n.delete:hover {\n  background-color: rgb(200, 50, 50);\n}\n</style>"],"mappings":";;;AA+DA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,IAAI;MACfC,gBAAgB,EAAE,EAAE;MACpBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACL,KAAK,CAACM,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,SAAS,CAAC,CAACC,MAAM;IACzD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACZ,OAAO,CAACa,IAAI,CAAC,CAAC,EAAE;QACvB,IAAI,CAACZ,KAAK,CAACa,IAAI,CAAC;UAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,IAAI,EAAE,IAAI,CAAClB,OAAO;UAAES,SAAS,EAAE,KAAK;UAAEU,SAAS,EAAE;QAAM,CAAC,CAAC;QAC3F,IAAI,CAACnB,OAAM,GAAI,EAAE;QACjB,IAAI,CAACI,SAAQ,GAAI,KAAK;MACxB,OAAO;QACL,IAAI,CAACA,SAAQ,GAAI,IAAI;MACvB;IACF,CAAC;IACDgB,eAAeA,CAACC,KAAK,EAAEF,SAAS,EAAE;MAChC,IAAI,CAAClB,KAAK,CAACoB,KAAK,CAAC,CAACF,SAAQ,GAAIA,SAAS;MACvC,IAAIA,SAAS,EAAE;QACb,IAAI,CAAChB,gBAAe,GAAI,IAAI,CAACF,KAAK,CAACoB,KAAK,CAAC,CAACH,IAAI;MAChD;IACF,CAAC;IACDI,QAAQA,CAACD,KAAK,EAAE;MACd,IAAI,CAACD,eAAe,CAACC,KAAK,EAAE,IAAI,CAAC;IACnC,CAAC;IACDE,QAAQA,CAACF,KAAK,EAAE;MACd,IAAI,CAACD,eAAe,CAACC,KAAK,EAAE,KAAK,CAAC;IACpC,CAAC;IACDG,UAAUA,CAACH,KAAK,EAAE;MAChB,IAAI,CAACpB,KAAK,CAACoB,KAAK,CAAC,CAACH,IAAG,GAAI,IAAI,CAACf,gBAAgB;MAC9C,IAAI,CAACiB,eAAe,CAACC,KAAK,EAAE,KAAK,CAAC;IACpC,CAAC;IACDI,UAAUA,CAACJ,KAAK,EAAE;MAChB,IAAI,CAACpB,KAAK,CAACyB,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}