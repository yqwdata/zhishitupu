{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '' // 保存编辑之前的任务名称\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task.completed).length;\n    }\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim()) {\n        this.tasks.push({\n          id: Date.now(),\n          name: this.newTask,\n          completed: false,\n          isEditing: false\n        });\n        this.newTask = '';\n      }\n    },\n    editTask(index) {\n      // 更新编辑状态并保存当前任务名称\n      this.previousTaskName = this.tasks[index].name;\n      this.tasks[index].isEditing = true;\n    },\n    saveTask(index) {\n      // 保存任务后更新编辑状态\n      this.tasks[index].isEditing = false;\n    },\n    cancelEdit(index) {\n      // 取消编辑，将任务名称恢复为之前的名称\n      this.tasks[index].name = this.previousTaskName;\n      this.tasks[index].isEditing = false;\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["data","newTask","tasks","editIndex","previousTaskName","computed","completedTasksCount","filter","task","completed","length","methods","addTask","trim","push","id","Date","now","name","isEditing","editTask","index","saveTask","cancelEdit","deleteTask","splice"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\ListView.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>To-do List</h1>\r\n    <input\r\n        v-model=\"newTask\"\r\n        placeholder=\"What needs to be done?\"\r\n        class=\"input-field\"\r\n    />\r\n    <button @click=\"addTask\" class=\"add-button\">Add</button>\r\n\r\n    <h2>{{ completedTasksCount }} out of {{ tasks.length }} items completed</h2>\r\n\r\n    <div v-for=\"(task, index) in tasks\" :key=\"task.id\" class=\"task\">\r\n      <div class=\"task-row\">\r\n        <label class=\"custom-checkbox\">\r\n          <input type=\"checkbox\" v-model=\"task.completed\" class=\"checkbox\" />\r\n          <span class=\"checkbox\" aria-hidden=\"true\"></span>\r\n        </label>\r\n        <span class=\"task-name\" v-if=\"!task.isEditing\">{{ task.name }}</span>\r\n        <input\r\n            v-if=\"task.isEditing\"\r\n            v-model=\"task.name\"\r\n            class=\"edit-input\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"button-group\">\r\n        <button\r\n            v-if=\"!task.isEditing\"\r\n            @click=\"editTask(index)\"\r\n            class=\"action-button\"\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n            v-if=\"!task.isEditing\"\r\n            @click=\"deleteTask(index)\"\r\n            class=\"delete action-button\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n            v-if=\"task.isEditing\"\r\n            @click=\"saveTask(index)\"\r\n            class=\"action-button\"\r\n        >\r\n          Save\r\n        </button>\r\n        <button\r\n            v-if=\"task.isEditing\"\r\n            @click=\"cancelEdit(index)\"\r\n            class=\"delete action-button\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newTask: '',\r\n      tasks: [],\r\n      editIndex: null,\r\n      previousTaskName: '', // 保存编辑之前的任务名称\r\n    };\r\n  },\r\n  computed: {\r\n    completedTasksCount() {\r\n      return this.tasks.filter(task => task.completed).length;\r\n    },\r\n  },\r\n  methods: {\r\n    addTask() {\r\n      if (this.newTask.trim()) {\r\n        this.tasks.push({ id: Date.now(), name: this.newTask, completed: false, isEditing: false });\r\n        this.newTask = '';\r\n      }\r\n    },\r\n    editTask(index) {\r\n      // 更新编辑状态并保存当前任务名称\r\n      this.previousTaskName = this.tasks[index].name;\r\n      this.tasks[index].isEditing = true;\r\n    },\r\n    saveTask(index) {\r\n      // 保存任务后更新编辑状态\r\n      this.tasks[index].isEditing = false;\r\n    },\r\n    cancelEdit(index) {\r\n      // 取消编辑，将任务名称恢复为之前的名称\r\n      this.tasks[index].name = this.previousTaskName;\r\n      this.tasks[index].isEditing = false;\r\n    },\r\n    deleteTask(index) {\r\n      this.tasks.splice(index, 1);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  max-width: 400px;\r\n  margin: auto;\r\n  text-align: center;\r\n}\r\n\r\n.input-field {\r\n  display: block;\r\n  width: calc(100% - 20px);\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n}\r\n\r\n.add-button {\r\n  background-color: #000000;\r\n  color: white;\r\n  border: none;\r\n  width: 200px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.task {\r\n  margin: 10px 0;\r\n}\r\n\r\n.task-row {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n.custom-checkbox {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 24px; /* 自定义复选框的宽度 */\r\n  height: 24px; /* 自定义复选框的高度 */\r\n  margin-right: 10px;\r\n}\r\n\r\n.custom-checkbox input[type=\"checkbox\"] {\r\n  opacity: 0;\r\n  position: absolute;\r\n  cursor: pointer;\r\n}\r\n\r\n.custom-checkbox span {\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #d30d0d;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.custom-checkbox input[type=\"checkbox\"]:checked + .checkbox {\r\n  background-color: #acacac;\r\n}\r\n\r\n.custom-checkbox input[type=\"checkbox\"]:checked + .checkbox::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 8px;\r\n  top: 4px;\r\n  width: 4px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n}\r\n\r\n.task-name {\r\n  flex: 1;\r\n  text-align: left;\r\n}\r\n\r\n.edit-input {\r\n  flex: 1;\r\n  margin: 5px auto; /* 输入框与按钮之间的间距 */\r\n  padding: 5px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.action-button {\r\n  background-color: #000000;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-right: 0px;\r\n  width:100px;\r\n}\r\n\r\n.delete {\r\n  background-color: rgb(232, 83, 83);\r\n  margin-left: 20px;\r\n}\r\n</style>"],"mappings":";;;AA6DA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,IAAI;MACfC,gBAAgB,EAAE,EAAE,CAAE;IACxB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,SAAS,CAAC,CAACC,MAAM;IACzD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACX,OAAO,CAACY,IAAI,CAAC,CAAC,EAAE;QACvB,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC;UAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,IAAI,EAAE,IAAI,CAACjB,OAAO;UAAEQ,SAAS,EAAE,KAAK;UAAEU,SAAS,EAAE;QAAM,CAAC,CAAC;QAC3F,IAAI,CAAClB,OAAM,GAAI,EAAE;MACnB;IACF,CAAC;IACDmB,QAAQA,CAACC,KAAK,EAAE;MACd;MACA,IAAI,CAACjB,gBAAe,GAAI,IAAI,CAACF,KAAK,CAACmB,KAAK,CAAC,CAACH,IAAI;MAC9C,IAAI,CAAChB,KAAK,CAACmB,KAAK,CAAC,CAACF,SAAQ,GAAI,IAAI;IACpC,CAAC;IACDG,QAAQA,CAACD,KAAK,EAAE;MACd;MACA,IAAI,CAACnB,KAAK,CAACmB,KAAK,CAAC,CAACF,SAAQ,GAAI,KAAK;IACrC,CAAC;IACDI,UAAUA,CAACF,KAAK,EAAE;MAChB;MACA,IAAI,CAACnB,KAAK,CAACmB,KAAK,CAAC,CAACH,IAAG,GAAI,IAAI,CAACd,gBAAgB;MAC9C,IAAI,CAACF,KAAK,CAACmB,KAAK,CAAC,CAACF,SAAQ,GAAI,KAAK;IACrC,CAAC;IACDK,UAAUA,CAACH,KAAK,EAAE;MAChB,IAAI,CAACnB,KAAK,CAACuB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}