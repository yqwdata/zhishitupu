{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withKeys as _withKeys, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"messagesContainer\",\n  class: \"chat-messages\"\n};\nconst _hoisted_2 = {\n  class: \"message-content\"\n};\nconst _hoisted_3 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_card, {\n    style: {\n      \"width\": \"80%\",\n      \"margin\": \"20px auto\"\n    }\n  }, {\n    default: _withCtx(() => [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n      style: {\n        \"font-size\": \"30px\",\n        \"text-align\": \"center\",\n        \"margin\": \"10px auto\",\n        \"color\": \"cornflowerblue\"\n      }\n    }, \"AI 助手\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (message, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"message\", message.sender])\n      }, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(message.text), 1 /* TEXT */)], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), $setup.showError ? (_openBlock(), _createBlock(_component_el_alert, {\n      key: 0,\n      type: \"error\",\n      closable: false\n    }, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"消息不能为空！\")])),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n      modelValue: $setup.inputMessage,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputMessage = $event),\n      placeholder: \"请输入消息\",\n      onKeyup: _withKeys($setup.sendMessage, [\"enter\"]),\n      disabled: $setup.isLoading,\n      style: {\n        \"width\": \"calc(100% - 120px)\",\n        \"margin-right\": \"10px\",\n        \"height\": \"40px\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      style: {\n        \"height\": \"40px\"\n      },\n      onClick: $setup.sendMessage,\n      loading: $setup.isLoading\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.isLoading ? '生成中...' : '发送'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\"])])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_createVNode","_component_el_card","style","default","_withCtx","_createElementVNode","_hoisted_1","_Fragment","_renderList","$setup","messages","message","index","key","_normalizeClass","sender","_hoisted_2","_toDisplayString","text","showError","_createBlock","_component_el_alert","type","closable","_cache","_createTextVNode","_","_createCommentVNode","_hoisted_3","_component_el_input","modelValue","inputMessage","$event","placeholder","onKeyup","_withKeys","sendMessage","disabled","isLoading","_component_el_button","onClick","loading"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\ChatView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card style=\"width: 80%; margin: 20px auto\">\n      <div style=\"font-size: 30px; text-align: center; margin: 10px auto; color: cornflowerblue\">AI 助手</div>\n      <div ref=\"messagesContainer\" class=\"chat-messages\">\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\" :class=\"message.sender\">\n          <div class=\"message-content\">\n            {{ message.text }}\n          </div>\n        </div>\n      </div>\n      <el-alert v-if=\"showError\" type=\"error\" :closable=\"false\">消息不能为空！</el-alert>\n      <div class=\"chat-input\">\n        <el-input\n            v-model=\"inputMessage\"\n            placeholder=\"请输入消息\"\n            @keyup.enter=\"sendMessage\"\n            :disabled=\"isLoading\"\n            style=\"width: calc(100% - 120px); margin-right: 10px; height: 40px\"\n        />\n        <el-button\n            type=\"primary\"\n            style=\"height: 40px\"\n            @click=\"sendMessage\"\n            :loading=\"isLoading\"\n        >\n          {{ isLoading ? '生成中...' : '发送' }}\n        </el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\n\nconst messages = ref([]);\nconst inputMessage = ref('');\nconst showError = ref(false);\nconst isLoading = ref(false);\nconst messagesContainer = ref(null);\n\n// 自动滚动到底部\nconst scrollToBottom = async () => {\n  await nextTick();\n  if (messagesContainer.value) {\n    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\n  }\n};\n\nconst sendMessage = async () => {\n  if (inputMessage.value.trim() === '') {\n    showError.value = true;\n    return;\n  }\n\n  try {\n    isLoading.value = true;\n    messages.value.push({ text: inputMessage.value, sender: 'user' });\n    await scrollToBottom();\n\n    const response = await axios.post('http://localhost:9090/chat',\n        inputMessage.value,\n        {\n          headers: {\n            'Content-Type': 'text/plain'\n          },\n          timeout: 30000 // 设置30秒超时\n        }\n    );\n\n    // 直接获取后端处理后的字符串结果\n    const result = response.data || '无返回内容';\n\n    messages.value.push({\n      text: result.replace(/\\n/g, '<br>'), // 处理换行显示\n      sender: 'llm'\n    });\n\n  } catch (error) {\n    let errorMsg = '请求失败: ';\n    if (error.response) {\n      errorMsg += error.response.data.error || error.response.statusText;\n    } else if (error.request) {\n      errorMsg += '服务器无响应';\n    } else {\n      errorMsg += error.message;\n    }\n    ElMessage.error(errorMsg);\n  } finally {\n    isLoading.value = false;\n    inputMessage.value = '';\n    showError.value = false;\n    await scrollToBottom();\n  }\n};\n</script>\n\n<style scoped>\n.chat-messages {\n  height: 400px;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding: 10px;\n  background: #f8f9fa;\n  border-radius: 8px;\n}\n\n.message {\n  margin-bottom: 15px;\n  transition: all 0.3s ease;\n}\n\n.message-content {\n  padding: 12px 16px;\n  border-radius: 15px;\n  max-width: 75%;\n  word-break: break-word;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  white-space: pre-wrap; /* 保留换行符 */\n}\n\n.user .message-content {\n  background-color: #409eff;\n  color: white;\n  margin-left: auto;\n  border-bottom-right-radius: 5px;\n  min-height: 40px; /* 最小高度 */\n  display: inline-block; /* 使宽度随内容变化 */\n}\n\n.llm .message-content {\n  background-color: #ffffff;\n  color: #333;\n  margin-right: auto;\n  border: 1px solid #eee;\n  border-bottom-left-radius: 5px;\n  min-height: 40px; /* 最小高度 */\n  display: inline-block; /* 使宽度随内容变化 */\n}\n\n.chat-input {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n}\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #a8a8a8;\n}\n</style>\n"],"mappings":";;EAIWA,GAAG,EAAC,mBAAmB;EAACC,KAAK,EAAC;;;EAE1BA,KAAK,EAAC;AAAiB;;EAM3BA,KAAK,EAAC;AAAY;;;;;;uBAX3BC,mBAAA,CA6BM,cA5BJC,YAAA,CA2BUC,kBAAA;IA3BDC,KAAqC,EAArC;MAAA;MAAA;IAAA;EAAqC;IAFlDC,OAAA,EAAAC,QAAA,CAGM,MAAsG,C,0BAAtGC,mBAAA,CAAsG;MAAjGH,KAAqF,EAArF;QAAA;QAAA;QAAA;QAAA;MAAA;IAAqF,GAAC,OAAK,sBAChGG,mBAAA,CAMM,OANNC,UAMM,I,kBALJP,mBAAA,CAIMQ,SAAA,QATdC,WAAA,CAKwCC,MAAA,CAAAC,QAAQ,EALhD,CAKqBC,OAAO,EAAEC,KAAK;2BAA3Bb,mBAAA,CAIM;QAJqCc,GAAG,EAAED,KAAK;QAAEd,KAAK,EALpEgB,eAAA,EAKqE,SAAS,EAASH,OAAO,CAACI,MAAM;UAC3FV,mBAAA,CAEM,OAFNW,UAEM,EAAAC,gBAAA,CADDN,OAAO,CAACO,IAAI,iB;4DAILT,MAAA,CAAAU,SAAS,I,cAAzBC,YAAA,CAA4EC,mBAAA;MAXlFR,GAAA;MAWiCS,IAAI,EAAC,OAAO;MAAEC,QAAQ,EAAE;;MAXzDpB,OAAA,EAAAC,QAAA,CAWgE,MAAOoB,MAAA,QAAAA,MAAA,OAXvEC,gBAAA,CAWgE,SAAO,E;MAXvEC,CAAA;UAAAC,mBAAA,gBAYMtB,mBAAA,CAgBM,OAhBNuB,UAgBM,GAfJ5B,YAAA,CAME6B,mBAAA;MAnBVC,UAAA,EAcqBrB,MAAA,CAAAsB,YAAY;MAdjC,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAcqBvB,MAAA,CAAAsB,YAAY,GAAAC,MAAA;MACrBC,WAAW,EAAC,OAAO;MAClBC,OAAK,EAhBlBC,SAAA,CAgB0B1B,MAAA,CAAA2B,WAAW;MACxBC,QAAQ,EAAE5B,MAAA,CAAA6B,SAAS;MACpBpC,KAAmE,EAAnE;QAAA;QAAA;QAAA;MAAA;yDAEJF,YAAA,CAOYuC,oBAAA;MANRjB,IAAI,EAAC,SAAS;MACdpB,KAAoB,EAApB;QAAA;MAAA,CAAoB;MACnBsC,OAAK,EAAE/B,MAAA,CAAA2B,WAAW;MAClBK,OAAO,EAAEhC,MAAA,CAAA6B;;MAxBtBnC,OAAA,EAAAC,QAAA,CA0BU,MAAiC,CA1B3CqB,gBAAA,CAAAR,gBAAA,CA0BaR,MAAA,CAAA6B,SAAS,mC;MA1BtBZ,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}