{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withKeys as _withKeys, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"message-content\"\n};\nconst _hoisted_2 = {\n  class: \"chat-input\"\n};\nimport { ref, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  __name: 'ChatView',\n  setup(__props) {\n    const messages = ref([]);\n    const inputMessage = ref('');\n    const showError = ref(false);\n    const isLoading = ref(false);\n    const messagesContainer = ref(null);\n\n    // 自动滚动到底部\n    const scrollToBottom = async () => {\n      await nextTick();\n      if (messagesContainer.value) {\n        messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\n      }\n    };\n    const sendMessage = async () => {\n      if (inputMessage.value.trim() === '') {\n        showError.value = true;\n        return;\n      }\n      try {\n        isLoading.value = true;\n        messages.value.push({\n          text: inputMessage.value,\n          sender: 'user'\n        });\n        await scrollToBottom();\n        const response = await axios.post('http://localhost:9090/chat', inputMessage.value, {\n          headers: {\n            'Content-Type': 'text/plain'\n          },\n          timeout: 30000 // 设置30秒超时\n        });\n\n        // 直接获取后端处理后的字符串结果\n        const result = response.data || '无返回内容';\n        messages.value.push({\n          text: result.replace(/\\n/g, '<br>'),\n          // 处理换行显示\n          sender: 'llm'\n        });\n      } catch (error) {\n        let errorMsg = '请求失败: ';\n        if (error.response) {\n          errorMsg += error.response.data.error || error.response.statusText;\n        } else if (error.request) {\n          errorMsg += '服务器无响应';\n        } else {\n          errorMsg += error.message;\n        }\n        ElMessage.error(errorMsg);\n      } finally {\n        isLoading.value = false;\n        inputMessage.value = '';\n        showError.value = false;\n        await scrollToBottom();\n      }\n    };\n    return (_ctx, _cache) => {\n      const _component_el_alert = _resolveComponent(\"el-alert\");\n      const _component_el_input = _resolveComponent(\"el-input\");\n      const _component_el_button = _resolveComponent(\"el-button\");\n      return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n        style: {\n          \"font-size\": \"30px\",\n          \"text-align\": \"center\",\n          \"margin\": \"10px auto\",\n          \"color\": \"cornflowerblue\"\n        }\n      }, \"AI 助手\", -1)), _createElementVNode(\"div\", {\n        ref_key: \"messagesContainer\",\n        ref: messagesContainer,\n        class: \"chat-messages\"\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(messages.value, (message, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: _normalizeClass([\"message\", message.sender])\n        }, [_createElementVNode(\"div\", _hoisted_1, _toDisplayString(message.text), 1)], 2);\n      }), 128))], 512), showError.value ? (_openBlock(), _createBlock(_component_el_alert, {\n        key: 0,\n        type: \"error\",\n        closable: false\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"消息不能为空！\")])),\n        _: 1\n      })) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n        modelValue: inputMessage.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => inputMessage.value = $event),\n        placeholder: \"请输入消息\",\n        onKeyup: _withKeys(sendMessage, [\"enter\"]),\n        disabled: isLoading.value,\n        style: {\n          \"width\": \"calc(100% - 120px)\",\n          \"margin-right\": \"10px\",\n          \"height\": \"40px\"\n        }\n      }, null, 8, [\"modelValue\", \"disabled\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        style: {\n          \"height\": \"40px\"\n        },\n        onClick: sendMessage,\n        loading: isLoading.value\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(isLoading.value ? '生成中...' : '发送'), 1)]),\n        _: 1\n      }, 8, [\"loading\"])])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","nextTick","ElMessage","axios","messages","inputMessage","showError","isLoading","messagesContainer","scrollToBottom","value","scrollTop","scrollHeight","sendMessage","trim","push","text","sender","response","post","headers","timeout","result","data","replace","error","errorMsg","statusText","request","message"],"sources":["D:/idea/simple-bms/vue/src/views/ChatView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"font-size: 30px; text-align: center; margin: 10px auto; color: cornflowerblue\">AI 助手</div>\r\n    <div ref=\"messagesContainer\" class=\"chat-messages\">\r\n      <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\" :class=\"message.sender\">\r\n        <div class=\"message-content\">\r\n          {{ message.text }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <el-alert v-if=\"showError\" type=\"error\" :closable=\"false\">消息不能为空！</el-alert>\r\n    <div class=\"chat-input\">\r\n      <el-input\r\n          v-model=\"inputMessage\"\r\n          placeholder=\"请输入消息\"\r\n          @keyup.enter=\"sendMessage\"\r\n          :disabled=\"isLoading\"\r\n          style=\"width: calc(100% - 120px); margin-right: 10px; height: 40px\"\r\n      />\r\n      <el-button\r\n          type=\"primary\"\r\n          style=\"height: 40px\"\r\n          @click=\"sendMessage\"\r\n          :loading=\"isLoading\"\r\n      >\r\n        {{ isLoading ? '生成中...' : '发送' }}\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, nextTick } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from 'axios';\r\n\r\nconst messages = ref([]);\r\nconst inputMessage = ref('');\r\nconst showError = ref(false);\r\nconst isLoading = ref(false);\r\nconst messagesContainer = ref(null);\r\n\r\n// 自动滚动到底部\r\nconst scrollToBottom = async () => {\r\n  await nextTick();\r\n  if (messagesContainer.value) {\r\n    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\r\n  }\r\n};\r\n\r\nconst sendMessage = async () => {\r\n  if (inputMessage.value.trim() === '') {\r\n    showError.value = true;\r\n    return;\r\n  }\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    messages.value.push({ text: inputMessage.value, sender: 'user' });\r\n    await scrollToBottom();\r\n\r\n    const response = await axios.post('http://localhost:9090/chat',\r\n        inputMessage.value,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'text/plain'\r\n          },\r\n          timeout: 30000 // 设置30秒超时\r\n        }\r\n    );\r\n\r\n    // 直接获取后端处理后的字符串结果\r\n    const result = response.data || '无返回内容';\r\n\r\n    messages.value.push({\r\n      text: result.replace(/\\n/g, '<br>'), // 处理换行显示\r\n      sender: 'llm'\r\n    });\r\n\r\n  } catch (error) {\r\n    let errorMsg = '请求失败: ';\r\n    if (error.response) {\r\n      errorMsg += error.response.data.error || error.response.statusText;\r\n    } else if (error.request) {\r\n      errorMsg += '服务器无响应';\r\n    } else {\r\n      errorMsg += error.message;\r\n    }\r\n    ElMessage.error(errorMsg);\r\n  } finally {\r\n    isLoading.value = false;\r\n    inputMessage.value = '';\r\n    showError.value = false;\r\n    await scrollToBottom();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-messages {\r\n  height: 80%;\r\n  overflow-y: auto;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n.message {\r\n  margin-bottom: 15px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.message-content {\r\n  padding: 12px 16px;\r\n  border-radius: 15px;\r\n  max-width: 75%;\r\n  word-break: break-word;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  white-space: pre-wrap; /* 保留换行符 */\r\n}\r\n\r\n.user .message-content {\r\n  background-color: #409eff;\r\n  color: white;\r\n  margin-left: auto;\r\n  border-bottom-right-radius: 5px;\r\n  min-height: 40px;\r\n  display: inline-block;\r\n}\r\n\r\n.llm .message-content {\r\n  background-color: #ffffff;\r\n  color: #333;\r\n  margin-right: auto;\r\n  border: 1px solid #eee;\r\n  border-bottom-left-radius: 5px;\r\n  min-height: 40px; /* 最小高度 */\r\n  display: inline-block; /* 使宽度随内容变化 */\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n/* 滚动条样式 */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: #c1c1c1;\r\n  border-radius: 4px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #a8a8a8;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;AAgCA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,OAAO;;;;IAEzB,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,YAAY,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMM,SAAS,GAAGN,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMO,SAAS,GAAGP,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMQ,iBAAiB,GAAGR,GAAG,CAAC,IAAI,CAAC;;IAEnC;IACA,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMR,QAAQ,CAAC,CAAC;MAChB,IAAIO,iBAAiB,CAACE,KAAK,EAAE;QAC3BF,iBAAiB,CAACE,KAAK,CAACC,SAAS,GAAGH,iBAAiB,CAACE,KAAK,CAACE,YAAY;MAC1E;IACF,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAIR,YAAY,CAACK,KAAK,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACpCR,SAAS,CAACI,KAAK,GAAG,IAAI;QACtB;MACF;MAEA,IAAI;QACFH,SAAS,CAACG,KAAK,GAAG,IAAI;QACtBN,QAAQ,CAACM,KAAK,CAACK,IAAI,CAAC;UAAEC,IAAI,EAAEX,YAAY,CAACK,KAAK;UAAEO,MAAM,EAAE;QAAO,CAAC,CAAC;QACjE,MAAMR,cAAc,CAAC,CAAC;QAEtB,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,4BAA4B,EAC1Dd,YAAY,CAACK,KAAK,EAClB;UACEU,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,OAAO,EAAE,KAAK,CAAC;QACjB,CACJ,CAAC;;QAED;QACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,IAAI,IAAI,OAAO;QAEvCnB,QAAQ,CAACM,KAAK,CAACK,IAAI,CAAC;UAClBC,IAAI,EAAEM,MAAM,CAACE,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;UAAE;UACrCP,MAAM,EAAE;QACV,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACd,IAAIC,QAAQ,GAAG,QAAQ;QACvB,IAAID,KAAK,CAACP,QAAQ,EAAE;UAClBQ,QAAQ,IAAID,KAAK,CAACP,QAAQ,CAACK,IAAI,CAACE,KAAK,IAAIA,KAAK,CAACP,QAAQ,CAACS,UAAU;QACpE,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;UACxBF,QAAQ,IAAI,QAAQ;QACtB,CAAC,MAAM;UACLA,QAAQ,IAAID,KAAK,CAACI,OAAO;QAC3B;QACA3B,SAAS,CAACuB,KAAK,CAACC,QAAQ,CAAC;MAC3B,CAAC,SAAS;QACRnB,SAAS,CAACG,KAAK,GAAG,KAAK;QACvBL,YAAY,CAACK,KAAK,GAAG,EAAE;QACvBJ,SAAS,CAACI,KAAK,GAAG,KAAK;QACvB,MAAMD,cAAc,CAAC,CAAC;MACxB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}