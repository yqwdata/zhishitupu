{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"Todo\",\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '',\n      showError: false\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task && task.completed).length;\n    }\n  },\n  created() {\n    const userId = this.$route.query.userId;\n    if (userId) {\n      this.loadTasks(userId);\n    } else {\n      this.loadTasks();\n    }\n  },\n  methods: {\n    loadTasks(userId) {\n      const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n      const targetUserId = userId || user.id; // 优先使用传递的 userId，否则使用当前登录用户的 userId\n      if (targetUserId) {\n        request.get(`/todo/user/${targetUserId}`).then(res => {\n          this.tasks = res.data || [];\n        });\n      }\n    },\n    addTask() {\n      const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n      const userId = this.$route.query.userId || user.id; // 优先使用传递的 userId，否则使用当前登录用户的 userId\n      if (this.newTask.trim()) {\n        const task = {\n          task: this.newTask,\n          completed: false,\n          userId: userId\n        };\n        request.post(\"/todo\", task).then(res => {\n          if (res.code === '0') {\n            this.tasks.push(res.data);\n            this.newTask = '';\n            this.showError = false;\n            this.loadTasks(userId);\n          }\n        });\n      } else {\n        this.showError = true;\n      }\n    },\n    toggleEditState(index, isEditing) {\n      this.tasks[index].isEditing = isEditing;\n      if (isEditing) {\n        this.previousTaskName = this.tasks[index].task;\n      }\n    },\n    editTask(index) {\n      this.toggleEditState(index, true);\n    },\n    saveTask(task) {\n      request.put(\"/todo\", task).then(res => {\n        if (res.code === '0') {\n          this.toggleEditState(this.tasks.indexOf(task), false);\n        }\n      });\n    },\n    cancelEdit(index) {\n      this.tasks[index].task = this.previousTaskName;\n      this.toggleEditState(index, false);\n    },\n    deleteTask(id) {\n      request.delete(`/todo/${id}`).then(res => {\n        if (res.code === '0') {\n          this.tasks = this.tasks.filter(task => task.id !== id);\n        }\n      });\n    },\n    updateTask(task) {\n      request.put(\"/todo\", task);\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","newTask","tasks","editIndex","previousTaskName","showError","computed","completedTasksCount","filter","task","completed","length","created","userId","$route","query","loadTasks","methods","user","JSON","parse","sessionStorage","getItem","targetUserId","id","get","then","res","addTask","trim","post","code","push","toggleEditState","index","isEditing","editTask","saveTask","put","indexOf","cancelEdit","deleteTask","delete","updateTask"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\demo\\vue\\src\\views\\ToDo.vue"],"sourcesContent":[" \n\n\n\n\n<template>\n  <div>\n    <el-card style=\"width: 80%; margin: 20px auto\">\n      <div style=\"font-size: 30px; text-align: center;margin: 10px auto; color: cornflowerblue\">待办事项</div>\n      <div style=\"margin-bottom: 20px;\">\n        <el-input\n          v-model=\"newTask\"\n          placeholder=\"需要做什么？\"\n          class=\"input-field\"\n          maxlength=\"50\"\n          style=\"width: calc(100% - 120px); margin-right: 10px; height: 40px\"\n        />\n        <el-button type=\"primary\" style=\"height: 40px\" @click=\"addTask\">添加</el-button>\n      </div>\n      <el-alert v-if=\"showError\" type=\"error\" :closable=\"false\">任务不能为空！</el-alert>\n\n      <div style=\"font-size: 30px; text-align: center;margin: 10px auto; color: cornflowerblue\">\n        已完成 {{ completedTasksCount }} 项，共 {{ tasks.length }} 项\n      </div>\n\n      <div v-for=\"(task, index) in tasks.filter(task => task)\" :key=\"task.id\" class=\"task\" style=\"margin: 10px;\">\n        <div class=\"task-row\" style=\"display: flex; align-items: center;\">\n          <el-checkbox v-model=\"task.completed\" @change=\"updateTask(task)\" style=\"margin-right: 10px;\" />\n          <span class=\"task-name\" v-if=\"!task.isEditing\" style=\"flex: 1;\">{{ task.task }}</span>\n          <el-input\n            v-if=\"task.isEditing\"\n            v-model=\"task.task\"\n            class=\"edit-input\"\n            style=\"flex: 1; margin-right: 10px;\"\n          />\n        </div>\n\n        <div class=\"button-group\" style=\"margin-top: 10px;\">\n          <el-button\n            v-if=\"!task.isEditing\"\n            type=\"primary\"\n            @click=\"editTask(index)\"\n            style=\"margin-right: 5px;\"\n          >\n            编辑\n          </el-button>\n          <el-button\n            v-if=\"!task.isEditing\"\n            type=\"danger\"\n            @click=\"deleteTask(task.id)\"\n          >\n            删除\n          </el-button>\n          <el-button\n            v-if=\"task.isEditing\"\n            type=\"primary\"\n            @click=\"saveTask(task)\"\n            style=\"margin-right: 5px;\"\n          >\n            保存\n          </el-button>\n          <el-button\n            v-if=\"task.isEditing\"\n            @click=\"cancelEdit(index)\"\n          >\n            取消\n          </el-button>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Todo\",\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '',\n      showError: false,\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task && task.completed).length;\n    },\n  },\n  created() {\n    const userId = this.$route.query.userId;\n    if (userId) {\n        this.loadTasks(userId);\n    } else {\n        this.loadTasks();\n    }\n},\nmethods: {\n    loadTasks(userId) {\n        const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n        const targetUserId = userId || user.id;  // 优先使用传递的 userId，否则使用当前登录用户的 userId\n        if (targetUserId) {\n            request.get(`/todo/user/${targetUserId}`).then(res => {\n                this.tasks = res.data || [];\n            });\n        }\n    },\n    addTask() {\n        const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n        const userId = this.$route.query.userId || user.id;  // 优先使用传递的 userId，否则使用当前登录用户的 userId\n        if (this.newTask.trim()) {\n            const task = { task: this.newTask, completed: false, userId: userId };\n            request.post(\"/todo\", task).then(res => {\n                if (res.code === '0') {\n                    this.tasks.push(res.data);\n                    this.newTask = '';\n                    this.showError = false;\n                    this.loadTasks(userId);\n                }\n            });\n        } else {\n            this.showError = true;\n        }\n    },\n    toggleEditState(index, isEditing) {\n      this.tasks[index].isEditing = isEditing;\n      if (isEditing) {\n        this.previousTaskName = this.tasks[index].task;\n      }\n    },\n    editTask(index) {\n      this.toggleEditState(index, true);\n    },\n    saveTask(task) {\n      request.put(\"/todo\", task).then(res => {\n        if (res.code === '0') {\n          this.toggleEditState(this.tasks.indexOf(task), false);\n        }\n      });\n    },\n    cancelEdit(index) {\n      this.tasks[index].task = this.previousTaskName;\n      this.toggleEditState(index, false);\n    },\n    deleteTask(id) {\n      request.delete(`/todo/${id}`).then(res => {\n        if (res.code === '0') {\n          this.tasks = this.tasks.filter(task => task.id !== id);\n        }\n      });\n    },\n    updateTask(task) {\n      request.put(\"/todo\", task);\n    }\n  },\n};\n</script>\n\n<style>\n.task {\n  padding: 10px;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  margin-bottom: 10px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}