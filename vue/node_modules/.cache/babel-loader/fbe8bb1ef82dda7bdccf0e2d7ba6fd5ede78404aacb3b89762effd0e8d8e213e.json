{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  __name: 'ChatView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const messages = ref([]);\n    const inputMessage = ref('');\n    const showError = ref(false);\n    const isLoading = ref(false);\n    const messagesContainer = ref(null);\n\n    // 自动滚动到底部\n    const scrollToBottom = async () => {\n      await nextTick();\n      if (messagesContainer.value) {\n        messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\n      }\n    };\n    const sendMessage = async () => {\n      if (inputMessage.value.trim() === '') {\n        showError.value = true;\n        return;\n      }\n      try {\n        isLoading.value = true;\n        messages.value.push({\n          text: inputMessage.value,\n          sender: 'user'\n        });\n        await scrollToBottom();\n        const response = await axios.post('http://localhost:9090/chat', inputMessage.value, {\n          headers: {\n            'Content-Type': 'text/plain'\n          },\n          timeout: 30000 // 设置30秒超时\n        });\n\n        // 直接获取后端处理后的字符串结果\n        const result = response.data || '无返回内容';\n        messages.value.push({\n          text: result.replace(/\\n/g, '<br>'),\n          // 处理换行显示\n          sender: 'llm'\n        });\n      } catch (error) {\n        let errorMsg = '请求失败: ';\n        if (error.response) {\n          errorMsg += error.response.data.error || error.response.statusText;\n        } else if (error.request) {\n          errorMsg += '服务器无响应';\n        } else {\n          errorMsg += error.message;\n        }\n        ElMessage.error(errorMsg);\n      } finally {\n        isLoading.value = false;\n        inputMessage.value = '';\n        showError.value = false;\n        await scrollToBottom();\n      }\n    };\n    const __returned__ = {\n      messages,\n      inputMessage,\n      showError,\n      isLoading,\n      messagesContainer,\n      scrollToBottom,\n      sendMessage,\n      ref,\n      nextTick,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","nextTick","ElMessage","axios","messages","inputMessage","showError","isLoading","messagesContainer","scrollToBottom","value","scrollTop","scrollHeight","sendMessage","trim","push","text","sender","response","post","headers","timeout","result","data","replace","error","errorMsg","statusText","request","message"],"sources":["C:/Users/哈振宇/Desktop/软件工程/springboot+vue框架/demo/vue/src/views/ChatView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card style=\"width: 80%; margin: 20px auto\">\n      <div style=\"font-size: 30px; text-align: center; margin: 10px auto; color: cornflowerblue\">AI 助手</div>\n      <div ref=\"messagesContainer\" class=\"chat-messages\">\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\" :class=\"message.sender\">\n          <div class=\"message-content\">\n            {{ message.text }}\n          </div>\n        </div>\n      </div>\n      <el-alert v-if=\"showError\" type=\"error\" :closable=\"false\">消息不能为空！</el-alert>\n      <div class=\"chat-input\">\n        <el-input\n            v-model=\"inputMessage\"\n            placeholder=\"请输入消息\"\n            @keyup.enter=\"sendMessage\"\n            :disabled=\"isLoading\"\n            style=\"width: calc(100% - 120px); margin-right: 10px; height: 40px\"\n        />\n        <el-button\n            type=\"primary\"\n            style=\"height: 40px\"\n            @click=\"sendMessage\"\n            :loading=\"isLoading\"\n        >\n          {{ isLoading ? '生成中...' : '发送' }}\n        </el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\n\nconst messages = ref([]);\nconst inputMessage = ref('');\nconst showError = ref(false);\nconst isLoading = ref(false);\nconst messagesContainer = ref(null);\n\n// 自动滚动到底部\nconst scrollToBottom = async () => {\n  await nextTick();\n  if (messagesContainer.value) {\n    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\n  }\n};\n\nconst sendMessage = async () => {\n  if (inputMessage.value.trim() === '') {\n    showError.value = true;\n    return;\n  }\n\n  try {\n    isLoading.value = true;\n    messages.value.push({ text: inputMessage.value, sender: 'user' });\n    await scrollToBottom();\n\n    const response = await axios.post('http://localhost:9090/chat',\n        inputMessage.value,\n        {\n          headers: {\n            'Content-Type': 'text/plain'\n          },\n          timeout: 30000 // 设置30秒超时\n        }\n    );\n\n    // 直接获取后端处理后的字符串结果\n    const result = response.data || '无返回内容';\n\n    messages.value.push({\n      text: result.replace(/\\n/g, '<br>'), // 处理换行显示\n      sender: 'llm'\n    });\n\n  } catch (error) {\n    let errorMsg = '请求失败: ';\n    if (error.response) {\n      errorMsg += error.response.data.error || error.response.statusText;\n    } else if (error.request) {\n      errorMsg += '服务器无响应';\n    } else {\n      errorMsg += error.message;\n    }\n    ElMessage.error(errorMsg);\n  } finally {\n    isLoading.value = false;\n    inputMessage.value = '';\n    showError.value = false;\n    await scrollToBottom();\n  }\n};\n</script>\n\n<style scoped>\n.chat-messages {\n  height: 400px;\n  overflow-y: auto;\n  margin-bottom: 20px;\n  padding: 10px;\n  background: #f8f9fa;\n  border-radius: 8px;\n}\n\n.message {\n  margin-bottom: 15px;\n  transition: all 0.3s ease;\n}\n\n.message-content {\n  padding: 12px 16px;\n  border-radius: 15px;\n  max-width: 75%;\n  word-break: break-word;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.user .message-content {\n  background-color: #409eff;\n  color: white;\n  margin-left: auto;\n  border-bottom-right-radius: 5px;\n}\n\n.llm .message-content {\n  background-color: #ffffff;\n  color: #333;\n  margin-right: auto;\n  border: 1px solid #eee;\n  border-bottom-left-radius: 5px;\n}\n\n.chat-input {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n}\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #a8a8a8;\n}\n</style>\n"],"mappings":";AAkCA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,YAAY,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMM,SAAS,GAAGN,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMO,SAAS,GAAGP,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMQ,iBAAiB,GAAGR,GAAG,CAAC,IAAI,CAAC;;IAEnC;IACA,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMR,QAAQ,CAAC,CAAC;MAChB,IAAIO,iBAAiB,CAACE,KAAK,EAAE;QAC3BF,iBAAiB,CAACE,KAAK,CAACC,SAAS,GAAGH,iBAAiB,CAACE,KAAK,CAACE,YAAY;MAC1E;IACF,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAIR,YAAY,CAACK,KAAK,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACpCR,SAAS,CAACI,KAAK,GAAG,IAAI;QACtB;MACF;MAEA,IAAI;QACFH,SAAS,CAACG,KAAK,GAAG,IAAI;QACtBN,QAAQ,CAACM,KAAK,CAACK,IAAI,CAAC;UAAEC,IAAI,EAAEX,YAAY,CAACK,KAAK;UAAEO,MAAM,EAAE;QAAO,CAAC,CAAC;QACjE,MAAMR,cAAc,CAAC,CAAC;QAEtB,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,4BAA4B,EAC1Dd,YAAY,CAACK,KAAK,EAClB;UACEU,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,OAAO,EAAE,KAAK,CAAC;QACjB,CACJ,CAAC;;QAED;QACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,IAAI,IAAI,OAAO;QAEvCnB,QAAQ,CAACM,KAAK,CAACK,IAAI,CAAC;UAClBC,IAAI,EAAEM,MAAM,CAACE,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;UAAE;UACrCP,MAAM,EAAE;QACV,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACd,IAAIC,QAAQ,GAAG,QAAQ;QACvB,IAAID,KAAK,CAACP,QAAQ,EAAE;UAClBQ,QAAQ,IAAID,KAAK,CAACP,QAAQ,CAACK,IAAI,CAACE,KAAK,IAAIA,KAAK,CAACP,QAAQ,CAACS,UAAU;QACpE,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;UACxBF,QAAQ,IAAI,QAAQ;QACtB,CAAC,MAAM;UACLA,QAAQ,IAAID,KAAK,CAACI,OAAO;QAC3B;QACA3B,SAAS,CAACuB,KAAK,CAACC,QAAQ,CAAC;MAC3B,CAAC,SAAS;QACRnB,SAAS,CAACG,KAAK,GAAG,KAAK;QACvBL,YAAY,CAACK,KAAK,GAAG,EAAE;QACvBJ,SAAS,CAACI,KAAK,GAAG,KAAK;QACvB,MAAMD,cAAc,CAAC,CAAC;MACxB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}