{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"task-row\"\n};\nconst _hoisted_3 = {\n  class: \"custom-checkbox\"\n};\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"task-name\"\n};\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = {\n  class: \"button-group\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"To-do List\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTask = $event),\n    placeholder: \"What needs to be done?\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addTask && $options.addTask(...args)),\n    class: \"add-button\"\n  }, \"Add\"), _createElementVNode(\"h2\", null, _toDisplayString($options.completedTasksCount) + \" out of \" + _toDisplayString($data.tasks.length) + \" items completed\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      class: \"task\"\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"label\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => task.completed = $event,\n      class: \"checkbox\"\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelCheckbox, task.completed]]), _cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n      class: \"checkbox\",\n      \"aria-hidden\": \"true\"\n    }, null, -1 /* HOISTED */))]), !task.isEditing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(task.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), task.isEditing ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => task.name = $event,\n      class: \"edit-input\"\n    }, null, 8 /* PROPS */, _hoisted_6)), [[_vModelText, task.name]]) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [!task.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.editTask(index),\n      class: \"action-button\"\n    }, \" Edit \", 8 /* PROPS */, _hoisted_8)) : _createCommentVNode(\"v-if\", true), !task.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.deleteTask(index),\n      class: \"delete action-button\"\n    }, \" Delete \", 8 /* PROPS */, _hoisted_9)) : _createCommentVNode(\"v-if\", true), task.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: $event => $options.saveTask(index),\n      class: \"action-button\"\n    }, \" Save \", 8 /* PROPS */, _hoisted_10)) : _createCommentVNode(\"v-if\", true), task.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 3,\n      onClick: $event => $options.cancelEdit(index),\n      class: \"delete action-button\"\n    }, \" Cancel \", 8 /* PROPS */, _hoisted_11)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","newTask","placeholder","onClick","args","$options","addTask","_toDisplayString","completedTasksCount","tasks","length","_Fragment","_renderList","task","index","_hoisted_2","_hoisted_3","type","completed","_hoisted_4","isEditing","_hoisted_5","name","_createCommentVNode","_hoisted_6","_hoisted_7","editTask","_hoisted_8","deleteTask","_hoisted_9","saveTask","_hoisted_10","cancelEdit","_hoisted_11"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\ListView.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>To-do List</h1>\r\n    <input\r\n        v-model=\"newTask\"\r\n        placeholder=\"What needs to be done?\"\r\n        class=\"input-field\"\r\n    />\r\n    <button @click=\"addTask\" class=\"add-button\">Add</button>\r\n\r\n    <h2>{{ completedTasksCount }} out of {{ tasks.length }} items completed</h2>\r\n\r\n    <div v-for=\"(task, index) in tasks\" :key=\"task.id\" class=\"task\">\r\n      <div class=\"task-row\">\r\n        <label class=\"custom-checkbox\">\r\n          <input type=\"checkbox\" v-model=\"task.completed\" class=\"checkbox\" />\r\n          <span class=\"checkbox\" aria-hidden=\"true\"></span>\r\n        </label>\r\n        <span class=\"task-name\" v-if=\"!task.isEditing\">{{ task.name }}</span>\r\n        <input\r\n            v-if=\"task.isEditing\"\r\n            v-model=\"task.name\"\r\n            class=\"edit-input\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"button-group\">\r\n        <button\r\n            v-if=\"!task.isEditing\"\r\n            @click=\"editTask(index)\"\r\n            class=\"action-button\"\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n            v-if=\"!task.isEditing\"\r\n            @click=\"deleteTask(index)\"\r\n            class=\"delete action-button\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n            v-if=\"task.isEditing\"\r\n            @click=\"saveTask(index)\"\r\n            class=\"action-button\"\r\n        >\r\n          Save\r\n        </button>\r\n        <button\r\n            v-if=\"task.isEditing\"\r\n            @click=\"cancelEdit(index)\"\r\n            class=\"delete action-button\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newTask: '',\r\n      tasks: [],\r\n      editIndex: null,\r\n      previousTaskName: '', // 保存编辑之前的任务名称\r\n    };\r\n  },\r\n  computed: {\r\n    completedTasksCount() {\r\n      return this.tasks.filter(task => task.completed).length;\r\n    },\r\n  },\r\n  methods: {\r\n    addTask() {\r\n      if (this.newTask.trim()) {\r\n        this.tasks.push({ id: Date.now(), name: this.newTask, completed: false, isEditing: false });\r\n        this.newTask = '';\r\n      }\r\n    },\r\n    editTask(index) {\r\n      // 更新编辑状态并保存当前任务名称\r\n      this.previousTaskName = this.tasks[index].name;\r\n      this.tasks[index].isEditing = true;\r\n    },\r\n    saveTask(index) {\r\n      // 保存任务后更新编辑状态\r\n      this.tasks[index].isEditing = false;\r\n    },\r\n    cancelEdit(index) {\r\n      // 取消编辑，将任务名称恢复为之前的名称\r\n      this.tasks[index].name = this.previousTaskName;\r\n      this.tasks[index].isEditing = false;\r\n    },\r\n    deleteTask(index) {\r\n      this.tasks.splice(index, 1);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  max-width: 400px;\r\n  margin: auto;\r\n  text-align: center;\r\n}\r\n\r\n.input-field {\r\n  display: block;\r\n  width: calc(100% - 20px);\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n}\r\n\r\n.add-button {\r\n  background-color: #000000;\r\n  color: white;\r\n  border: none;\r\n  width: 200px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.task {\r\n  margin: 10px 0;\r\n}\r\n\r\n.task-row {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n.custom-checkbox {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 24px; /* 自定义复选框的宽度 */\r\n  height: 24px; /* 自定义复选框的高度 */\r\n  margin-right: 10px;\r\n}\r\n\r\n.custom-checkbox input[type=\"checkbox\"] {\r\n  opacity: 0;\r\n  position: absolute;\r\n  cursor: pointer;\r\n}\r\n\r\n.custom-checkbox span {\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #d30d0d;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.custom-checkbox input[type=\"checkbox\"]:checked + .checkbox {\r\n  background-color: #acacac;\r\n}\r\n\r\n.custom-checkbox input[type=\"checkbox\"]:checked + .checkbox::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 8px;\r\n  top: 4px;\r\n  width: 4px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n}\r\n\r\n.task-name {\r\n  flex: 1;\r\n  text-align: left;\r\n}\r\n\r\n.edit-input {\r\n  flex: 1;\r\n  margin: 5px auto; /* 输入框与按钮之间的间距 */\r\n  padding: 5px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.action-button {\r\n  background-color: #000000;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-right: 0px;\r\n  width:100px;\r\n}\r\n\r\n.delete {\r\n  background-color: rgb(232, 83, 83);\r\n  margin-left: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}