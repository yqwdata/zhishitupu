{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withKeys as _withKeys, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-messages\"\n};\nconst _hoisted_2 = {\n  class: \"message-content\"\n};\nconst _hoisted_3 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_card, {\n    style: {\n      \"width\": \"80%\",\n      \"margin\": \"20px auto\"\n    }\n  }, {\n    default: _withCtx(() => [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n      style: {\n        \"font-size\": \"30px\",\n        \"text-align\": \"center\",\n        \"margin\": \"10px auto\",\n        \"color\": \"cornflowerblue\"\n      }\n    }, \"AI 助手\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (message, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"message\", message.sender])\n      }, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(message.text), 1 /* TEXT */)], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))]), $setup.showError ? (_openBlock(), _createBlock(_component_el_alert, {\n      key: 0,\n      type: \"error\",\n      closable: false\n    }, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"消息不能为空！\")])),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n      modelValue: $setup.inputMessage,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputMessage = $event),\n      placeholder: \"请输入消息\",\n      onKeyup: _withKeys($setup.sendMessage, [\"enter\"]),\n      style: {\n        \"width\": \"calc(100% - 120px)\",\n        \"margin-right\": \"10px\",\n        \"height\": \"40px\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      style: {\n        \"height\": \"40px\"\n      },\n      onClick: $setup.sendMessage\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"发送\")])),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_el_card","style","default","_withCtx","_createElementVNode","_hoisted_1","_Fragment","_renderList","$setup","messages","message","index","key","_normalizeClass","sender","_hoisted_2","_toDisplayString","text","showError","_createBlock","_component_el_alert","type","closable","_cache","_createTextVNode","_","_createCommentVNode","_hoisted_3","_component_el_input","modelValue","inputMessage","$event","placeholder","onKeyup","_withKeys","sendMessage","_component_el_button","onClick"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\ChatView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card style=\"width: 80%; margin: 20px auto\">\n      <div style=\"font-size: 30px; text-align: center; margin: 10px auto; color: cornflowerblue\">AI 助手</div>\n      <div class=\"chat-messages\">\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\" :class=\"message.sender\">\n          <div class=\"message-content\">\n            {{ message.text }}\n          </div>\n        </div>\n      </div>\n      <el-alert v-if=\"showError\" type=\"error\" :closable=\"false\">消息不能为空！</el-alert>\n      <div class=\"chat-input\">\n        <el-input\n          v-model=\"inputMessage\"\n          placeholder=\"请输入消息\"\n          @keyup.enter=\"sendMessage\"\n          style=\"width: calc(100% - 120px); margin-right: 10px; height: 40px\"\n        />\n        <el-button type=\"primary\" style=\"height: 40px\" @click=\"sendMessage\">发送</el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\n\nconst messages = ref([]);\nconst inputMessage = ref('');\nconst showError = ref(false);\n\nconst sendMessage = async () => {\n  if (inputMessage.value.trim() === '') {\n    showError.value = true;\n    return;\n  }\n  messages.value.push({ text: inputMessage.value, sender: 'user' });\n  try {\n    const response = await axios.post('http://localhost:9090//chat', inputMessage.value, {\n      headers: {\n        'Content-Type': 'text/plain' // 明确指定请求类型\n      }\n    });\n    // 处理可能的嵌套响应\n    const result = typeof response.data === 'string' ? response.data : response.data.data?.result;\n    messages.value.push({ text: result || '无返回内容', sender: 'llm' });\n  } catch (error) {\n    ElMessage.error(`请求失败: ${error.response?.data?.error || error.message}`);\n  }\n  inputMessage.value = '';\n  showError.value = false;\n};\n\n</script>\n\n<style scoped>\n.chat-messages {\n  height: 400px;\n  overflow-y: auto;\n  margin-bottom: 20px;\n}\n\n.message {\n  margin-bottom: 10px;\n}\n\n.message-content {\n  padding: 10px;\n  border-radius: 5px;\n  max-width: 70%;\n}\n\n.user .message-content {\n  background-color: #409eff;\n  color: white;\n  margin-left: auto;\n}\n\n.llm .message-content {\n  background-color: #f0f0f0;\n  color: black;\n  margin-right: auto;\n}\n\n.chat-input {\n  display: flex;\n  align-items: center;\n}\n</style>"],"mappings":";;EAIWA,KAAK,EAAC;AAAe;;EAEjBA,KAAK,EAAC;AAAiB;;EAM3BA,KAAK,EAAC;AAAY;;;;;;uBAX3BC,mBAAA,CAqBM,cApBJC,YAAA,CAmBUC,kBAAA;IAnBDC,KAAqC,EAArC;MAAA;MAAA;IAAA;EAAqC;IAFlDC,OAAA,EAAAC,QAAA,CAGM,MAAsG,C,0BAAtGC,mBAAA,CAAsG;MAAjGH,KAAqF,EAArF;QAAA;QAAA;QAAA;QAAA;MAAA;IAAqF,GAAC,OAAK,sBAChGG,mBAAA,CAMM,OANNC,UAMM,I,kBALJP,mBAAA,CAIMQ,SAAA,QATdC,WAAA,CAKwCC,MAAA,CAAAC,QAAQ,EALhD,CAKqBC,OAAO,EAAEC,KAAK;2BAA3Bb,mBAAA,CAIM;QAJqCc,GAAG,EAAED,KAAK;QAAEd,KAAK,EALpEgB,eAAA,EAKqE,SAAS,EAASH,OAAO,CAACI,MAAM;UAC3FV,mBAAA,CAEM,OAFNW,UAEM,EAAAC,gBAAA,CADDN,OAAO,CAACO,IAAI,iB;sCAILT,MAAA,CAAAU,SAAS,I,cAAzBC,YAAA,CAA4EC,mBAAA;MAXlFR,GAAA;MAWiCS,IAAI,EAAC,OAAO;MAAEC,QAAQ,EAAE;;MAXzDpB,OAAA,EAAAC,QAAA,CAWgE,MAAOoB,MAAA,QAAAA,MAAA,OAXvEC,gBAAA,CAWgE,SAAO,E;MAXvEC,CAAA;UAAAC,mBAAA,gBAYMtB,mBAAA,CAQM,OARNuB,UAQM,GAPJ5B,YAAA,CAKE6B,mBAAA;MAlBVC,UAAA,EAcmBrB,MAAA,CAAAsB,YAAY;MAd/B,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAcmBvB,MAAA,CAAAsB,YAAY,GAAAC,MAAA;MACrBC,WAAW,EAAC,OAAO;MAClBC,OAAK,EAhBhBC,SAAA,CAgBwB1B,MAAA,CAAA2B,WAAW;MACzBlC,KAAmE,EAAnE;QAAA;QAAA;QAAA;MAAA;6CAEFF,YAAA,CAAkFqC,oBAAA;MAAvEf,IAAI,EAAC,SAAS;MAACpB,KAAoB,EAApB;QAAA;MAAA,CAAoB;MAAEoC,OAAK,EAAE7B,MAAA,CAAA2B;;MAnB/DjC,OAAA,EAAAC,QAAA,CAmB4E,MAAEoB,MAAA,QAAAA,MAAA,OAnB9EC,gBAAA,CAmB4E,IAAE,E;MAnB9EC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}