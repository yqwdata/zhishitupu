{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"Register\",\n  data() {\n    return {\n      form: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        confirm: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    register() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.password !== this.form.confirm) {\n            this.$message({\n              type: 'error',\n              message: \"两次密码输入不一致\"\n            });\n            return;\n          }\n          request.post(\"/user/register\", this.form).then(res => {\n            if (res.code === '0') {\n              this.$message({\n                type: 'success',\n                message: \"注册成功\"\n              });\n              this.$router.push(\"/login\"); //跳转到首页\n            } else {\n              this.$message({\n                type: 'error',\n                message: res.msg\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","form","rules","username","required","message","trigger","password","confirm","methods","register","$refs","validate","valid","$message","type","post","then","res","code","$router","push","msg"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 100%; height: 100vh; background-color: darkslateblue; overflow: hidden\">\r\n    <div style=\"width: 500px; margin: 20vh auto\">\r\n      <div style=\"color: #cccccc; font-size: 30px; text-align: center; padding: 30px\">\r\n        欢迎注册\r\n      </div>\r\n      <el-form ref=\"form\" :model=\"form\" size=\"large\" style=\"width: 100%;\" :rules=\"rules\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"form.username\" prefix-icon=\"User-filled\"/>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"form.password\" prefix-icon=\"Lock\" show-password/>\r\n        </el-form-item>\r\n        <el-form-item prop=\"confirm\">\r\n          <el-input v-model=\"form.confirm\" prefix-icon=\"Lock\" show-password/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"register\">注 册</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      form: {},\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n        ],\r\n        confirm: [\r\n          {required: true, message: '请再次输入密码', trigger: 'blur'},\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    register() {\r\n      this.$refs['form'].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.password !== this.form.confirm) {\r\n            this.$message({\r\n              type: 'error',\r\n              message: \"两次密码输入不一致\"\r\n            })\r\n            return\r\n          }\r\n          request.post(\"/user/register\", this.form).then(res => {\r\n            if (res.code === '0') {\r\n              this.$message({\r\n                type: 'success',\r\n                message: \"注册成功\"\r\n              })\r\n              this.$router.push(\"/login\")  //跳转到首页\r\n            } else {\r\n              this.$message({\r\n                type: 'error',\r\n                message: res.msg\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";AAyBA,OAAOA,OAAM,MAAO,iBAAiB;AAErC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MACRC,KAAK,EAAE;QACLC,QAAQ,EAAE,CACR;UAACC,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAM,CAAC,CACrD;QACDC,QAAQ,EAAE,CACR;UAACH,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,OAAO;UAAEC,OAAO,EAAE;QAAM,CAAC,CACpD;QACDE,OAAO,EAAE,CACP;UAACJ,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAM,CAAC;MAEzD;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAAC,MAAM,CAAC,CAACC,QAAQ,CAACC,KAAI,IAAK;QACnC,IAAIA,KAAK,EAAE;UACT,IAAI,IAAI,CAACZ,IAAI,CAACM,QAAO,KAAM,IAAI,CAACN,IAAI,CAACO,OAAO,EAAE;YAC5C,IAAI,CAACM,QAAQ,CAAC;cACZC,IAAI,EAAE,OAAO;cACbV,OAAO,EAAE;YACX,CAAC;YACD;UACF;UACAP,OAAO,CAACkB,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAACf,IAAI,CAAC,CAACgB,IAAI,CAACC,GAAE,IAAK;YACpD,IAAIA,GAAG,CAACC,IAAG,KAAM,GAAG,EAAE;cACpB,IAAI,CAACL,QAAQ,CAAC;gBACZC,IAAI,EAAE,SAAS;gBACfV,OAAO,EAAE;cACX,CAAC;cACD,IAAI,CAACe,OAAO,CAACC,IAAI,CAAC,QAAQ,GAAG;YAC/B,OAAO;cACL,IAAI,CAACP,QAAQ,CAAC;gBACZC,IAAI,EAAE,OAAO;gBACbV,OAAO,EAAEa,GAAG,CAACI;cACf,CAAC;YACH;UACF,CAAC;QACH;MACF,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}