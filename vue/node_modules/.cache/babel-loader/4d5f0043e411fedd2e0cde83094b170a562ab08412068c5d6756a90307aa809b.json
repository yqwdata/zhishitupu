{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"50px\",\n    \"line-height\": \"50px\",\n    \"border-bottom\": \"1px solid #ccc\",\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"width\": \"200px\",\n    \"padding-top\": \"10px\",\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_dropdown_item = _resolveComponent(\"el-dropdown-item\");\n  const _component_el_dropdown_menu = _resolveComponent(\"el-dropdown-menu\");\n  const _component_el_dropdown = _resolveComponent(\"el-dropdown\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    style: {\n      \"width\": \"200px\",\n      \"padding-left\": \"30px\",\n      \"font-weight\": \"bold\",\n      \"color\": \"dodgerblue\"\n    }\n  }, \"后台管理\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    style: {\n      \"flex\": \"1\"\n    }\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_upload, {\n    action: \"http://localhost:9090/files/upload\",\n    \"show-file-list\": false,\n    \"on-success\": $options.handleAvatarSuccess,\n    \"before-upload\": $options.beforeAvatarUpload,\n    style: {\n      \"margin-right\": \"10px\",\n      \"margin-top\": \"10px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_avatar, {\n      size: 40,\n      src: $data.user.avatar\n    }, null, 8 /* PROPS */, [\"src\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"on-success\", \"before-upload\"]), _createVNode(_component_el_dropdown, {\n    \"split-button\": \"\",\n    type: \"primary\",\n    style: {\n      \"margin-left\": \"10px\",\n      \"margin-top\": \"-5px\"\n    }\n  }, {\n    dropdown: _withCtx(() => [_createVNode(_component_el_dropdown_menu, null, {\n      default: _withCtx(() => [_createVNode(_component_el_dropdown_item, {\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/person'))\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"个人信息\")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_dropdown_item, {\n        onClick: _cache[1] || (_cache[1] = $event => _ctx.$router.push('/login'))\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"退出系统\")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($data.user.nickname) + \" \", 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_upload","action","$options","handleAvatarSuccess","beforeAvatarUpload","default","_withCtx","_component_el_avatar","size","src","$data","user","avatar","_","_component_el_dropdown","type","dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","onClick","_cache","$event","_ctx","$router","push","_createTextVNode","_toDisplayString","nickname"],"sources":["D:\\idea\\simple-bms\\vue\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 50px; line-height: 50px; border-bottom: 1px solid #ccc; display: flex;\">\r\n    <div style=\"width: 200px; padding-left: 30px;font-weight: bold; color: dodgerblue\">后台管理</div>\r\n    <div style=\"flex: 1\"></div>\r\n    <div style=\"width: 200px; padding-top: 10px; display: flex; align-items: center;\">\r\n      <el-upload\r\n        action=\"http://localhost:9090/files/upload\"\r\n        :show-file-list=\"false\"\r\n        :on-success=\"handleAvatarSuccess\"\r\n        :before-upload=\"beforeAvatarUpload\"\r\n        style=\"margin-right: 10px; margin-top: 10px;\"\r\n      >\r\n        <el-avatar :size=\"40\" :src=\"user.avatar\" />\r\n      </el-upload>\r\n      <el-dropdown split-button type=\"primary\" style=\"margin-left: 10px; margin-top: -5px\">\r\n          {{user.nickname}}\r\n        <template #dropdown>\r\n          <el-dropdown-menu>\r\n            <el-dropdown-item @click=\"$router.push('/person')\">个人信息</el-dropdown-item>\r\n            <el-dropdown-item @click=\"$router.push('/login')\">退出系统</el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </template>\r\n      </el-dropdown>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\n\r\nexport default {\r\n  name: \"Header\",\r\n  data() {\r\n    return {\r\n      user: {}\r\n    }\r\n  },\r\n  created() {\r\n    this.user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\r\n  },\r\n  methods: {\r\n    handleAvatarSuccess(res, file) {\r\n      this.user.avatar = res.data;\r\n      sessionStorage.setItem('user', JSON.stringify(this.user));\r\n      // 将头像 URL 保存到数据库\r\n      request.put(\"/user\", this.user).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            type: 'success',\r\n            message: \"头像更新成功\"\r\n          });\r\n        } else {\r\n          this.$message({\r\n            type: 'error',\r\n            message: res.msg\r\n          });\r\n        }\r\n      });\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isPNG = file.type === 'image/png';\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isJPG && !isPNG) {\r\n        this.$message.error('上传头像图片只能是 JPG 或 PNG 格式!');\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!');\r\n      }\r\n      return (isJPG || isPNG) && isLt2M;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":";;;EACOA,KAAsF,EAAtF;IAAA;IAAA;IAAA;IAAA;EAAA;AAAsF;;EAGpFA,KAA4E,EAA5E;IAAA;IAAA;IAAA;IAAA;EAAA;AAA4E;;;;;;;uBAHnFC,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJC,mBAAA,CAA6F;IAAxFH,KAA6E,EAA7E;MAAA;MAAA;MAAA;MAAA;IAAA;EAA6E,GAAC,MAAI,sB,0BACvFG,mBAAA,CAA2B;IAAtBH,KAAe,EAAf;MAAA;IAAA;EAAe,6BACpBG,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,YAAA,CAQYC,oBAAA;IAPVC,MAAM,EAAC,oCAAoC;IAC1C,gBAAc,EAAE,KAAK;IACrB,YAAU,EAAEC,QAAA,CAAAC,mBAAmB;IAC/B,eAAa,EAAED,QAAA,CAAAE,kBAAkB;IAClCV,KAA6C,EAA7C;MAAA;MAAA;IAAA;;IAVRW,OAAA,EAAAC,QAAA,CAYQ,MAA2C,CAA3CP,YAAA,CAA2CQ,oBAAA;MAA/BC,IAAI,EAAE,EAAE;MAAGC,GAAG,EAAEC,KAAA,CAAAC,IAAI,CAACC;;IAZzCC,CAAA;sDAcMd,YAAA,CAQce,sBAAA;IARD,cAAY,EAAZ,EAAY;IAACC,IAAI,EAAC,SAAS;IAACrB,KAA2C,EAA3C;MAAA;MAAA;IAAA;;IAE5BsB,QAAQ,EAAAV,QAAA,CACjB,MAGmB,CAHnBP,YAAA,CAGmBkB,2BAAA;MApB7BZ,OAAA,EAAAC,QAAA,CAkBY,MAA0E,CAA1EP,YAAA,CAA0EmB,2BAAA;QAAvDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;;QAlBlDnB,OAAA,EAAAC,QAAA,CAkB+D,MAAIc,MAAA,QAAAA,MAAA,OAlBnEK,gBAAA,CAkB+D,MAAI,E;QAlBnEZ,CAAA;UAmBYd,YAAA,CAAyEmB,2BAAA;QAAtDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;;QAnBlDnB,OAAA,EAAAC,QAAA,CAmB8D,MAAIc,MAAA,QAAAA,MAAA,OAnBlEK,gBAAA,CAmB8D,MAAI,E;QAnBlEZ,CAAA;;MAAAA,CAAA;;IAAAR,OAAA,EAAAC,QAAA,CAeU,MAAiB,CAf3BmB,gBAAA,CAAAC,gBAAA,CAeYhB,KAAA,CAAAC,IAAI,CAACgB,QAAQ,IAAE,GACnB,gB;IAhBRd,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}