{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"margin-bottom\": \"20px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"font-size\": \"30px\",\n    \"text-align\": \"center\",\n    \"margin\": \"10px auto\",\n    \"color\": \"cornflowerblue\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"task-row\",\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"task-name\",\n  style: {\n    \"flex\": \"1\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"button-group\",\n  style: {\n    \"margin-top\": \"10px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_card, {\n    style: {\n      \"width\": \"80%\",\n      \"margin\": \"20px auto\"\n    }\n  }, {\n    default: _withCtx(() => [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n      style: {\n        \"font-size\": \"30px\",\n        \"text-align\": \"center\",\n        \"margin\": \"10px auto\",\n        \"color\": \"cornflowerblue\"\n      }\n    }, \"待办事项\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_input, {\n      modelValue: $data.newTask,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTask = $event),\n      placeholder: \"需要做什么？\",\n      class: \"input-field\",\n      maxlength: \"50\",\n      style: {\n        \"width\": \"calc(100% - 120px)\",\n        \"margin-right\": \"10px\",\n        \"height\": \"40px\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      style: {\n        \"height\": \"40px\"\n      },\n      onClick: $options.addTask\n    }, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"添加\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]), $data.showError ? (_openBlock(), _createBlock(_component_el_alert, {\n      key: 0,\n      type: \"error\",\n      closable: false\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"任务不能为空！\")])),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_2, \" 已完成 \" + _toDisplayString($options.completedTasksCount) + \" 项，共 \" + _toDisplayString($data.tasks.length) + \" 项 \", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks.filter(task => task), (task, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: task.id,\n        class: \"task\",\n        style: {\n          \"margin\": \"10px\"\n        }\n      }, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_checkbox, {\n        modelValue: task.completed,\n        \"onUpdate:modelValue\": $event => task.completed = $event,\n        onChange: $event => $options.updateTask(task),\n        style: {\n          \"margin-right\": \"10px\"\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"]), !task.isEditing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(task.task), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), task.isEditing ? (_openBlock(), _createBlock(_component_el_input, {\n        key: 1,\n        modelValue: task.task,\n        \"onUpdate:modelValue\": $event => task.task = $event,\n        class: \"edit-input\",\n        style: {\n          \"flex\": \"1\",\n          \"margin-right\": \"10px\"\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [!task.isEditing ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        type: \"primary\",\n        onClick: $event => $options.editTask(index),\n        style: {\n          \"margin-right\": \"5px\"\n        }\n      }, {\n        default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\" 编辑 \")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), !task.isEditing ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 1,\n        type: \"danger\",\n        onClick: $event => $options.deleteTask(task.id)\n      }, {\n        default: _withCtx(() => [...(_cache[4] || (_cache[4] = [_createTextVNode(\" 删除 \")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), task.isEditing ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 2,\n        type: \"primary\",\n        onClick: $event => $options.saveTask(task),\n        style: {\n          \"margin-right\": \"5px\"\n        }\n      }, {\n        default: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createTextVNode(\" 保存 \")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), task.isEditing ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 3,\n        onClick: $event => $options.cancelEdit(index)\n      }, {\n        default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\" 取消 \")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["style","class","key","_createElementBlock","_createVNode","_component_el_card","default","_withCtx","_createElementVNode","_hoisted_1","_component_el_input","modelValue","$data","newTask","_cache","$event","placeholder","maxlength","_component_el_button","type","onClick","$options","addTask","_createTextVNode","_","showError","_createBlock","_component_el_alert","closable","_createCommentVNode","_hoisted_2","_toDisplayString","completedTasksCount","tasks","length","_Fragment","_renderList","filter","task","index","id","_hoisted_3","_component_el_checkbox","completed","onChange","updateTask","isEditing","_hoisted_4","_hoisted_5","editTask","deleteTask","saveTask","cancelEdit"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\demo\\vue\\src\\views\\ToDo.vue"],"sourcesContent":["\n\n\n\n<template>\n  <div>\n    <el-card style=\"width: 80%; margin: 20px auto\">\n      <div style=\"font-size: 30px; text-align: center;margin: 10px auto; color: cornflowerblue\">待办事项</div>\n      <div style=\"margin-bottom: 20px;\">\n        <el-input\n          v-model=\"newTask\"\n          placeholder=\"需要做什么？\"\n          class=\"input-field\"\n          maxlength=\"50\"\n          style=\"width: calc(100% - 120px); margin-right: 10px; height: 40px\"\n        />\n        <el-button type=\"primary\" style=\"height: 40px\" @click=\"addTask\">添加</el-button>\n      </div>\n      <el-alert v-if=\"showError\" type=\"error\" :closable=\"false\">任务不能为空！</el-alert>\n\n      <div style=\"font-size: 30px; text-align: center;margin: 10px auto; color: cornflowerblue\">\n        已完成 {{ completedTasksCount }} 项，共 {{ tasks.length }} 项\n      </div>\n\n      <div v-for=\"(task, index) in tasks.filter(task => task)\" :key=\"task.id\" class=\"task\" style=\"margin: 10px;\">\n        <div class=\"task-row\" style=\"display: flex; align-items: center;\">\n          <el-checkbox v-model=\"task.completed\" @change=\"updateTask(task)\" style=\"margin-right: 10px;\" />\n          <span class=\"task-name\" v-if=\"!task.isEditing\" style=\"flex: 1;\">{{ task.task }}</span>\n          <el-input\n            v-if=\"task.isEditing\"\n            v-model=\"task.task\"\n            class=\"edit-input\"\n            style=\"flex: 1; margin-right: 10px;\"\n          />\n        </div>\n\n        <div class=\"button-group\" style=\"margin-top: 10px;\">\n          <el-button\n            v-if=\"!task.isEditing\"\n            type=\"primary\"\n            @click=\"editTask(index)\"\n            style=\"margin-right: 5px;\"\n          >\n            编辑\n          </el-button>\n          <el-button\n            v-if=\"!task.isEditing\"\n            type=\"danger\"\n            @click=\"deleteTask(task.id)\"\n          >\n            删除\n          </el-button>\n          <el-button\n            v-if=\"task.isEditing\"\n            type=\"primary\"\n            @click=\"saveTask(task)\"\n            style=\"margin-right: 5px;\"\n          >\n            保存\n          </el-button>\n          <el-button\n            v-if=\"task.isEditing\"\n            @click=\"cancelEdit(index)\"\n          >\n            取消\n          </el-button>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Todo\",\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '',\n      showError: false,\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task && task.completed).length;\n    },\n  },\n  created() {\n    const userId = this.$route.query.userId;\n    if (userId) {\n        this.loadTasks(userId);\n    } else {\n        this.loadTasks();\n    }\n},\nmethods: {\n    loadTasks(userId) {\n        const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n        if (userId || user.id) {\n            request.get(`/todo/user/${userId || user.id}`).then(res => {\n                this.tasks = res.data || [];\n            });\n        }\n    },\n    addTask() {\n        const userId = this.$route.query.userId;\n        if (this.newTask.trim()) {\n            const task = { task: this.newTask, completed: false, userId: userId };\n            request.post(\"/todo\", task).then(res => {\n                if (res.code === '0') {\n                    this.tasks.push(res.data);\n                    this.newTask = '';\n                    this.showError = false;\n                    this.loadTasks(userId);\n                }\n            });\n        } else {\n            this.showError = true;\n        }\n    },\n    toggleEditState(index, isEditing) {\n      this.tasks[index].isEditing = isEditing;\n      if (isEditing) {\n        this.previousTaskName = this.tasks[index].task;\n      }\n    },\n    editTask(index) {\n      this.toggleEditState(index, true);\n    },\n    saveTask(task) {\n      request.put(\"/todo\", task).then(res => {\n        if (res.code === '0') {\n          this.toggleEditState(this.tasks.indexOf(task), false);\n        }\n      });\n    },\n    cancelEdit(index) {\n      this.tasks[index].task = this.previousTaskName;\n      this.toggleEditState(index, false);\n    },\n    deleteTask(id) {\n      request.delete(`/todo/${id}`).then(res => {\n        if (res.code === '0') {\n          this.tasks = this.tasks.filter(task => task.id !== id);\n        }\n      });\n    },\n    updateTask(task) {\n      request.put(\"/todo\", task);\n    }\n  },\n};\n</script>\n\n<style>\n.task {\n  padding: 10px;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  margin-bottom: 10px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}