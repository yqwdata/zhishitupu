{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withKeys as _withKeys, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"messagesContainer\",\n  class: \"chat-messages\"\n};\nconst _hoisted_2 = {\n  class: \"message-content\"\n};\nconst _hoisted_3 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    style: {\n      \"font-size\": \"30px\",\n      \"text-align\": \"center\",\n      \"margin\": \"10px auto\",\n      \"color\": \"cornflowerblue\"\n    }\n  }, \"AI 助手\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"message\", message.sender])\n    }, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(message.text), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), $setup.showError ? (_openBlock(), _createBlock(_component_el_alert, {\n    key: 0,\n    type: \"error\",\n    closable: false\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"消息不能为空！\")])),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n    modelValue: $setup.inputMessage,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputMessage = $event),\n    placeholder: \"请输入消息\",\n    onKeyup: _withKeys($setup.sendMessage, [\"enter\"]),\n    disabled: $setup.isLoading,\n    style: {\n      \"width\": \"calc(100% - 120px)\",\n      \"margin-right\": \"10px\",\n      \"height\": \"40px\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    style: {\n      \"height\": \"40px\"\n    },\n    onClick: $setup.sendMessage,\n    loading: $setup.isLoading\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.isLoading ? '生成中...' : '发送'), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\"])])]);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_createElementVNode","style","_hoisted_1","_Fragment","_renderList","$setup","messages","message","index","key","_normalizeClass","sender","_hoisted_2","_toDisplayString","text","showError","_createBlock","_component_el_alert","type","closable","default","_withCtx","_cache","_createTextVNode","_","_createCommentVNode","_hoisted_3","_createVNode","_component_el_input","modelValue","inputMessage","$event","placeholder","onKeyup","_withKeys","sendMessage","disabled","isLoading","_component_el_button","onClick","loading"],"sources":["D:\\idea\\simple-bms\\vue\\src\\views\\ChatView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"font-size: 30px; text-align: center; margin: 10px auto; color: cornflowerblue\">AI 助手</div>\r\n    <div ref=\"messagesContainer\" class=\"chat-messages\">\r\n      <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\" :class=\"message.sender\">\r\n        <div class=\"message-content\">\r\n          {{ message.text }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <el-alert v-if=\"showError\" type=\"error\" :closable=\"false\">消息不能为空！</el-alert>\r\n    <div class=\"chat-input\">\r\n      <el-input\r\n          v-model=\"inputMessage\"\r\n          placeholder=\"请输入消息\"\r\n          @keyup.enter=\"sendMessage\"\r\n          :disabled=\"isLoading\"\r\n          style=\"width: calc(100% - 120px); margin-right: 10px; height: 40px\"\r\n      />\r\n      <el-button\r\n          type=\"primary\"\r\n          style=\"height: 40px\"\r\n          @click=\"sendMessage\"\r\n          :loading=\"isLoading\"\r\n      >\r\n        {{ isLoading ? '生成中...' : '发送' }}\r\n      </el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, nextTick } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from 'axios';\r\n\r\nconst messages = ref([]);\r\nconst inputMessage = ref('');\r\nconst showError = ref(false);\r\nconst isLoading = ref(false);\r\nconst messagesContainer = ref(null);\r\n\r\n// 自动滚动到底部\r\nconst scrollToBottom = async () => {\r\n  await nextTick();\r\n  if (messagesContainer.value) {\r\n    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;\r\n  }\r\n};\r\n\r\nconst sendMessage = async () => {\r\n  if (inputMessage.value.trim() === '') {\r\n    showError.value = true;\r\n    return;\r\n  }\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    messages.value.push({ text: inputMessage.value, sender: 'user' });\r\n    await scrollToBottom();\r\n\r\n    const response = await axios.post('http://localhost:9090/chat',\r\n        inputMessage.value,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'text/plain'\r\n          },\r\n          timeout: 30000 // 设置30秒超时\r\n        }\r\n    );\r\n\r\n    // 直接获取后端处理后的字符串结果\r\n    const result = response.data || '无返回内容';\r\n\r\n    messages.value.push({\r\n      text: result.replace(/\\n/g, '<br>'), // 处理换行显示\r\n      sender: 'llm'\r\n    });\r\n\r\n  } catch (error) {\r\n    let errorMsg = '请求失败: ';\r\n    if (error.response) {\r\n      errorMsg += error.response.data.error || error.response.statusText;\r\n    } else if (error.request) {\r\n      errorMsg += '服务器无响应';\r\n    } else {\r\n      errorMsg += error.message;\r\n    }\r\n    ElMessage.error(errorMsg);\r\n  } finally {\r\n    isLoading.value = false;\r\n    inputMessage.value = '';\r\n    showError.value = false;\r\n    await scrollToBottom();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-messages {\r\n  height: 80%;\r\n  overflow-y: auto;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n}\r\n\r\n.message {\r\n  margin-bottom: 15px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.message-content {\r\n  padding: 12px 16px;\r\n  border-radius: 15px;\r\n  max-width: 75%;\r\n  word-break: break-word;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  white-space: pre-wrap; /* 保留换行符 */\r\n}\r\n\r\n.user .message-content {\r\n  background-color: #409eff;\r\n  color: white;\r\n  margin-left: auto;\r\n  border-bottom-right-radius: 5px;\r\n  min-height: 40px;\r\n  display: inline-block;\r\n}\r\n\r\n.llm .message-content {\r\n  background-color: #ffffff;\r\n  color: #333;\r\n  margin-right: auto;\r\n  border: 1px solid #eee;\r\n  border-bottom-left-radius: 5px;\r\n  min-height: 40px; /* 最小高度 */\r\n  display: inline-block; /* 使宽度随内容变化 */\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n/* 滚动条样式 */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: #c1c1c1;\r\n  border-radius: 4px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #a8a8a8;\r\n}\r\n</style>\r\n"],"mappings":";;EAGSA,GAAG,EAAC,mBAAmB;EAACC,KAAK,EAAC;;;EAE1BA,KAAK,EAAC;AAAiB;;EAM3BA,KAAK,EAAC;AAAY;;;;;uBAVzBC,mBAAA,CA2BM,c,0BA1BJC,mBAAA,CAAsG;IAAjGC,KAAqF,EAArF;MAAA;MAAA;MAAA;MAAA;IAAA;EAAqF,GAAC,OAAK,sBAChGD,mBAAA,CAMM,OANNE,UAMM,I,kBALJH,mBAAA,CAIMI,SAAA,QARZC,WAAA,CAIsCC,MAAA,CAAAC,QAAQ,EAJ9C,CAImBC,OAAO,EAAEC,KAAK;yBAA3BT,mBAAA,CAIM;MAJqCU,GAAG,EAAED,KAAK;MAAEV,KAAK,EAJlEY,eAAA,EAImE,SAAS,EAASH,OAAO,CAACI,MAAM;QAC3FX,mBAAA,CAEM,OAFNY,UAEM,EAAAC,gBAAA,CADDN,OAAO,CAACO,IAAI,iB;0DAILT,MAAA,CAAAU,SAAS,I,cAAzBC,YAAA,CAA4EC,mBAAA;IAVhFR,GAAA;IAU+BS,IAAI,EAAC,OAAO;IAAEC,QAAQ,EAAE;;IAVvDC,OAAA,EAAAC,QAAA,CAU8D,MAAOC,MAAA,QAAAA,MAAA,OAVrEC,gBAAA,CAU8D,SAAO,E;IAVrEC,CAAA;QAAAC,mBAAA,gBAWIzB,mBAAA,CAgBM,OAhBN0B,UAgBM,GAfJC,YAAA,CAMEC,mBAAA;IAlBRC,UAAA,EAamBxB,MAAA,CAAAyB,YAAY;IAb/B,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAamB1B,MAAA,CAAAyB,YAAY,GAAAC,MAAA;IACrBC,WAAW,EAAC,OAAO;IAClBC,OAAK,EAfhBC,SAAA,CAewB7B,MAAA,CAAA8B,WAAW;IACxBC,QAAQ,EAAE/B,MAAA,CAAAgC,SAAS;IACpBpC,KAAmE,EAAnE;MAAA;MAAA;MAAA;IAAA;uDAEJ0B,YAAA,CAOYW,oBAAA;IANRpB,IAAI,EAAC,SAAS;IACdjB,KAAoB,EAApB;MAAA;IAAA,CAAoB;IACnBsC,OAAK,EAAElC,MAAA,CAAA8B,WAAW;IAClBK,OAAO,EAAEnC,MAAA,CAAAgC;;IAvBpBjB,OAAA,EAAAC,QAAA,CAyBQ,MAAiC,CAzBzCE,gBAAA,CAAAV,gBAAA,CAyBWR,MAAA,CAAAgC,SAAS,mC;IAzBpBb,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}