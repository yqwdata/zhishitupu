{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  class: \"task-row\"\n};\nconst _hoisted_4 = {\n  class: \"custom-checkbox\"\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"task-name\"\n};\nconst _hoisted_7 = [\"onUpdate:modelValue\"];\nconst _hoisted_8 = {\n  class: \"button-group\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"待办事项\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTask = $event),\n    placeholder: \"需要做什么？\",\n    class: \"input-field\",\n    maxlength: \"50\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addTask && $options.addTask(...args)),\n    class: \"add-button\"\n  }, \"添加\"), $data.showError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"任务不能为空！\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h2\", null, \"已完成 \" + _toDisplayString($options.completedTasksCount) + \" 项，共 \" + _toDisplayString($data.tasks.length) + \" 项\", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      class: \"task\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"label\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => task.completed = $event,\n      class: \"checkbox\"\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelCheckbox, task.completed]]), _cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n      class: \"checkbox\",\n      \"aria-hidden\": \"true\"\n    }, null, -1 /* HOISTED */))]), !task.isEditing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString(task.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), task.isEditing ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => task.name = $event,\n      class: \"edit-input\"\n    }, null, 8 /* PROPS */, _hoisted_7)), [[_vModelText, task.name]]) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_8, [!task.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.editTask(index),\n      class: \"action-button\"\n    }, \" 编辑 \", 8 /* PROPS */, _hoisted_9)) : _createCommentVNode(\"v-if\", true), !task.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.deleteTask(index),\n      class: \"delete action-button\"\n    }, \" 删除 \", 8 /* PROPS */, _hoisted_10)) : _createCommentVNode(\"v-if\", true), task.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: $event => $options.saveTask(index),\n      class: \"action-button\"\n    }, \" 保存 \", 8 /* PROPS */, _hoisted_11)) : _createCommentVNode(\"v-if\", true), task.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 3,\n      onClick: $event => $options.cancelEdit(index),\n      class: \"delete action-button\"\n    }, \" 取消 \", 8 /* PROPS */, _hoisted_12)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["id","key","class","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","newTask","placeholder","maxlength","onClick","args","$options","addTask","showError","_hoisted_2","_createCommentVNode","_toDisplayString","completedTasksCount","tasks","length","_Fragment","_renderList","task","index","_hoisted_3","_hoisted_4","type","completed","_hoisted_5","isEditing","_hoisted_6","name","_hoisted_7","_hoisted_8","editTask","_hoisted_9","deleteTask","_hoisted_10","saveTask","_hoisted_11","cancelEdit","_hoisted_12"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\ListView.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>待办事项</h1>\n    <input\n        v-model=\"newTask\"\n        placeholder=\"需要做什么？\"\n        class=\"input-field\"\n        maxlength=\"50\"\n    />\n    <button @click=\"addTask\" class=\"add-button\">添加</button>\n    <p v-if=\"showError\" class=\"error-message\">任务不能为空！</p>\n\n    <h2>已完成 {{ completedTasksCount }} 项，共 {{ tasks.length }} 项</h2>\n\n    <div v-for=\"(task, index) in tasks\" :key=\"task.id\" class=\"task\">\n      <div class=\"task-row\">\n        <label class=\"custom-checkbox\">\n          <input type=\"checkbox\" v-model=\"task.completed\" class=\"checkbox\" />\n          <span class=\"checkbox\" aria-hidden=\"true\"></span>\n        </label>\n        <span class=\"task-name\" v-if=\"!task.isEditing\">{{ task.name }}</span>\n        <input\n            v-if=\"task.isEditing\"\n            v-model=\"task.name\"\n            class=\"edit-input\"\n        />\n      </div>\n\n      <div class=\"button-group\">\n        <button\n            v-if=\"!task.isEditing\"\n            @click=\"editTask(index)\"\n            class=\"action-button\"\n        >\n          编辑\n        </button>\n        <button\n            v-if=\"!task.isEditing\"\n            @click=\"deleteTask(index)\"\n            class=\"delete action-button\"\n        >\n          删除\n        </button>\n        <button\n            v-if=\"task.isEditing\"\n            @click=\"saveTask(index)\"\n            class=\"action-button\"\n        >\n          保存\n        </button>\n        <button\n            v-if=\"task.isEditing\"\n            @click=\"cancelEdit(index)\"\n            class=\"delete action-button\"\n        >\n          取消\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '',\n      showError: false,\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task.completed).length;\n    },\n  },\n  methods: {\n    addTask() {\n      if (this.newTask.trim()) {\n        this.tasks.push({ id: Date.now(), name: this.newTask, completed: false, isEditing: false });\n        this.newTask = '';\n        this.showError = false;\n      } else {\n        this.showError = true;\n      }\n    },\n    toggleEditState(index, isEditing) {\n      this.tasks[index].isEditing = isEditing;\n      if (isEditing) {\n        this.previousTaskName = this.tasks[index].name;\n      }\n    },\n    editTask(index) {\n      this.toggleEditState(index, true);\n    },\n    saveTask(index) {\n      this.toggleEditState(index, false);\n    },\n    cancelEdit(index) {\n      this.tasks[index].name = this.previousTaskName;\n      this.toggleEditState(index, false);\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  text-align: center;\n  overflow: hidden;\n  margin: 10px auto;\n}\n\n.error-message {\n  color: red;\n  margin: 5px 0;\n}\n\n.input-field {\n  display: block;\n  width: calc(100% - 20px);\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.add-button {\n  background-color: #000000;\n  color: white;\n  border: none;\n  width: 200px;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.add-button:hover {\n  background-color: #333333;\n}\n\n.task {\n  margin: 10px 0;\n}\n\n.task-row {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 0;\n}\n\n.custom-checkbox {\n  position: relative;\n  display: inline-block;\n  width: 24px; /* 自定义复选框的宽度 */\n  height: 24px; /* 自定义复选框的高度 */\n  margin-right: 10px;\n}\n\n.custom-checkbox input[type=\"checkbox\"] {\n  opacity: 0;\n  position: absolute;\n  cursor: pointer;\n}\n\n.custom-checkbox span {\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  background-color: #d30d0d;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n\n.custom-checkbox input[type=\"checkbox\"]:checked + .checkbox {\n  background-color: #acacac;\n}\n\n.custom-checkbox input[type=\"checkbox\"]:checked + .checkbox::after {\n  content: '';\n  position: absolute;\n  left: 8px;\n  top: 4px;\n  width: 4px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n\n.task-name {\n  flex: 1;\n  text-align: left;\n}\n\n.edit-input {\n  flex: 1;\n  margin: 5px auto; /* 输入框与按钮之间的间距 */\n  padding: 5px;\n}\n\n.button-group {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.action-button {\n  background-color: #000000;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 0px;\n  width: 100px;\n  transition: background-color 0.3s;\n}\n\n.action-button:hover {\n  background-color: #333333;\n}\n\n.delete {\n  background-color: rgb(232, 83, 83);\n  margin-left: 20px;\n}\n\n.delete:hover {\n  background-color: rgb(200, 50, 50);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}