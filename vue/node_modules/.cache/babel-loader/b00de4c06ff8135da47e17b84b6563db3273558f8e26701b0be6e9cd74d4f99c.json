{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"Todo\",\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '',\n      showError: false\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task && task.completed).length;\n    }\n  },\n  created() {\n    this.loadTasks();\n  },\n  methods: {\n    async loadTasks() {\n      const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n      if (user.id) {\n        const res = await request.get(`/todo/user/${user.id}`);\n        this.tasks = res.data || [];\n      }\n    },\n    addTask() {\n      const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n      if (this.newTask.trim()) {\n        if (!user || !user.id) {\n          console.error(\"User ID is missing or invalid.\");\n          return;\n        }\n        const task = {\n          task: this.newTask,\n          completed: false,\n          userId: user.id\n        };\n        request.post(\"/todo\", task).then(res => {\n          if (res.code === '0') {\n            this.tasks.push(res.data);\n            this.newTask = '';\n            this.showError = false;\n          }\n        });\n      } else {\n        this.showError = true;\n      }\n    },\n    toggleEditState(index, isEditing) {\n      this.tasks[index].isEditing = isEditing;\n      if (isEditing) {\n        this.previousTaskName = this.tasks[index].task;\n      }\n    },\n    editTask(index) {\n      this.toggleEditState(index, true);\n    },\n    async saveTask(task) {\n      const res = await request.put(\"/todo\", task);\n      if (res.code === '0') {\n        this.toggleEditState(this.tasks.indexOf(task), false);\n      }\n    },\n    cancelEdit(index) {\n      this.tasks[index].task = this.previousTaskName;\n      this.toggleEditState(index, false);\n    },\n    async deleteTask(id) {\n      const res = await request.delete(`/todo/${id}`);\n      if (res.code === '0') {\n        this.tasks = this.tasks.filter(task => task.id !== id);\n      }\n    },\n    async updateTask(task) {\n      await request.put(\"/todo\", task);\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","newTask","tasks","editIndex","previousTaskName","showError","computed","completedTasksCount","filter","task","completed","length","created","loadTasks","methods","user","JSON","parse","sessionStorage","getItem","id","res","get","addTask","trim","console","error","userId","post","then","code","push","toggleEditState","index","isEditing","editTask","saveTask","put","indexOf","cancelEdit","deleteTask","delete","updateTask"],"sources":["C:\\Users\\哈振宇\\Desktop\\软件工程\\springboot+vue框架\\demo\\vue\\src\\views\\ToDo.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card style=\"width: 60%; margin: 10px auto\">\n      <h1>待办事项</h1>\n      <div style=\"margin-bottom: 20px;\">\n        <el-input\n          v-model=\"newTask\"\n          placeholder=\"需要做什么？\"\n          class=\"input-field\"\n          maxlength=\"50\"\n          style=\"width: calc(100% - 120px); margin-right: 10px;\"\n        />\n        <el-button type=\"primary\" @click=\"addTask\">添加</el-button>\n      </div>\n      <el-alert v-if=\"showError\" type=\"error\" :closable=\"false\">任务不能为空！</el-alert>\n\n      <h2>已完成 {{ completedTasksCount }} 项，共 {{ tasks.length }} 项</h2>\n\n      <div v-for=\"(task, index) in tasks\" :key=\"task.id\" class=\"task\" style=\"margin-bottom: 10px;\">\n        <div class=\"task-row\" style=\"display: flex; align-items: center;\">\n          <el-checkbox v-model=\"task.completed\" @change=\"updateTask(task)\" style=\"margin-right: 10px;\" />\n          <span class=\"task-name\" v-if=\"!task.isEditing\" style=\"flex: 1;\">{{ task.task }}</span>\n          <el-input\n            v-if=\"task.isEditing\"\n            v-model=\"task.task\"\n            class=\"edit-input\"\n            style=\"flex: 1; margin-right: 10px;\"\n          />\n        </div>\n\n        <div class=\"button-group\" style=\"margin-top: 10px;\">\n          <el-button\n            v-if=\"!task.isEditing\"\n            type=\"primary\"\n            @click=\"editTask(index)\"\n            style=\"margin-right: 10px;\"\n          >\n            编辑\n          </el-button>\n          <el-button\n            v-if=\"!task.isEditing\"\n            type=\"danger\"\n            @click=\"deleteTask(task.id)\"\n          >\n            删除\n          </el-button>\n          <el-button\n            v-if=\"task.isEditing\"\n            type=\"primary\"\n            @click=\"saveTask(task)\"\n            style=\"margin-right: 10px;\"\n          >\n            保存\n          </el-button>\n          <el-button\n            v-if=\"task.isEditing\"\n            @click=\"cancelEdit(index)\"\n          >\n            取消\n          </el-button>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Todo\",\n  data() {\n    return {\n      newTask: '',\n      tasks: [],\n      editIndex: null,\n      previousTaskName: '',\n      showError: false,\n    };\n  },\n  computed: {\n    completedTasksCount() {\n      return this.tasks.filter(task => task && task.completed).length;\n    },\n  },\n  created() {\n    this.loadTasks();\n  },\n  methods: {\n    async loadTasks() {\n      const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n      if (user.id) {\n        const res = await request.get(`/todo/user/${user.id}`);\n        this.tasks = res.data || [];\n      }\n    },\n    addTask() {\n      const user = JSON.parse(sessionStorage.getItem('user') || \"{}\");\n      if (this.newTask.trim()) {\n        if (!user || !user.id) {\n          console.error(\"User ID is missing or invalid.\");\n          return;\n        }\n        const task = { task: this.newTask, completed: false, userId: user.id };\n        request.post(\"/todo\", task).then(res => {\n          if (res.code === '0') {\n            this.tasks.push(res.data);\n            this.newTask = '';\n            this.showError = false;\n          }\n        });\n      } else {\n        this.showError = true;\n      }\n    },\n    toggleEditState(index, isEditing) {\n      this.tasks[index].isEditing = isEditing;\n      if (isEditing) {\n        this.previousTaskName = this.tasks[index].task;\n      }\n    },\n    editTask(index) {\n      this.toggleEditState(index, true);\n    },\n    async saveTask(task) {\n      const res = await request.put(\"/todo\", task);\n      if (res.code === '0') {\n        this.toggleEditState(this.tasks.indexOf(task), false);\n      }\n    },\n    cancelEdit(index) {\n      this.tasks[index].task = this.previousTaskName;\n      this.toggleEditState(index, false);\n    },\n    async deleteTask(id) {\n      const res = await request.delete(`/todo/${id}`);\n      if (res.code === '0') {\n        this.tasks = this.tasks.filter(task => task.id !== id);\n      }\n    },\n    async updateTask(task) {\n      await request.put(\"/todo\", task);\n    }\n  },\n};\n</script>\n\n<style>\n.task {\n  padding: 10px;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  margin-bottom: 10px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}